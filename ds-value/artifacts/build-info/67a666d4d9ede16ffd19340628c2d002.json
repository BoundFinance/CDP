{
	"id": "67a666d4d9ede16ffd19340628c2d002",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"ds-value/value.sol": {
				"content": "/// value.sol - a value is a simple thing, it can be get and set\n\n// Copyright (C) 2017  DappHub, LLC\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\n// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport 'ds-thing/thing.sol';\n\ncontract DSValue is DSThing {\n    bool    has;\n    bytes32 val;\n    function peek() public view returns (bytes32, bool) {\n        return (val,has);\n    }\n    function read() public view returns (bytes32) {\n        (bytes32 wut, bool haz) = peek(); // change var to actual types\n        require(haz, \"DSValue: invalid value\"); // change assert to require and add a revert message\n        return wut;\n    }\n    function poke(bytes32 wut) public note payable auth {\n        val = wut;\n        has = true;\n    }\n    function void() public note payable auth {  // unset the value\n        has = false;\n    }\n}\n//0x0cd070a5516d934336eD59a1646Cc0a3819046b7"
			},
			"ds-thing/thing.sol": {
				"content": "// thing.sol - `auth` with handy mixins. your things should be DSThings\n\n// Copyright (C) 2017  DappHub, LLC\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.13;\n\nimport 'ds-auth/auth.sol';\nimport 'ds-note/note.sol';\nimport 'ds-math/math.sol';\n\ncontract DSThing is DSAuth, DSNote, DSMath {\n\n    function S(string memory s) internal pure returns (bytes4) {\n        return bytes4(keccak256(bytes(s)));\n\n    }\n\n}\n"
			},
			"ds-math/math.sol": {
				"content": "/// math.sol -- mixin for inline numerical wizardry\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity >0.8.13;\n\ncontract DSMath {\n    function add(uint x, uint y) internal pure returns (uint z) {\n        require((z = x + y) >= x, \"ds-math-add-overflow\");\n    }\n    function sub(uint x, uint y) internal pure returns (uint z) {\n        require((z = x - y) <= x, \"ds-math-sub-underflow\");\n    }\n    function mul(uint x, uint y) internal pure returns (uint z) {\n        require(y == 0 || (z = x * y) / y == x, \"ds-math-mul-overflow\");\n    }\n\n    function min(uint x, uint y) internal pure returns (uint z) {\n        return x <= y ? x : y;\n    }\n    function max(uint x, uint y) internal pure returns (uint z) {\n        return x >= y ? x : y;\n    }\n    function imin(int x, int y) internal pure returns (int z) {\n        return x <= y ? x : y;\n    }\n    function imax(int x, int y) internal pure returns (int z) {\n        return x >= y ? x : y;\n    }\n\n    uint constant WAD = 10 ** 18;\n    uint constant RAY = 10 ** 27;\n\n    //rounds to zero if x*y < WAD / 2\n    function wmul(uint x, uint y) internal pure returns (uint z) {\n        z = add(mul(x, y), WAD / 2) / WAD;\n    }\n    //rounds to zero if x*y < WAD / 2\n    function rmul(uint x, uint y) internal pure returns (uint z) {\n        z = add(mul(x, y), RAY / 2) / RAY;\n    }\n    //rounds to zero if x*y < WAD / 2\n    function wdiv(uint x, uint y) internal pure returns (uint z) {\n        z = add(mul(x, WAD), y / 2) / y;\n    }\n    //rounds to zero if x*y < RAY / 2\n    function rdiv(uint x, uint y) internal pure returns (uint z) {\n        z = add(mul(x, RAY), y / 2) / y;\n    }\n\n    // This famous algorithm is called \"exponentiation by squaring\"\n    // and calculates x^n with x as fixed-point and n as regular unsigned.\n    //\n    // It's O(log n), instead of O(n) for naive repeated multiplication.\n    //\n    // These facts are why it works:\n    //\n    //  If n is even, then x^n = (x^2)^(n/2).\n    //  If n is odd,  then x^n = x * x^(n-1),\n    //   and applying the equation for even x gives\n    //    x^n = x * (x^2)^((n-1) / 2).\n    //\n    //  Also, EVM division is flooring and\n    //    floor[(n-1) / 2] = floor[n / 2].\n    //\n    function rpow(uint x, uint n) internal pure returns (uint z) {\n        z = n % 2 != 0 ? x : RAY;\n\n        for (n /= 2; n != 0; n /= 2) {\n            x = rmul(x, x);\n\n            if (n % 2 != 0) {\n                z = rmul(z, x);\n            }\n        }\n    }\n}"
			},
			"ds-note/note.sol": {
				"content": "/// note.sol -- the `note' modifier, for logging calls as events\n\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.13;\n\ncontract DSNote {\n    event LogNote(\n        bytes4   indexed  sig,\n        address  indexed  guy,\n        bytes32  indexed  foo,\n        bytes32  indexed  bar,\n        uint              wad,\n        bytes             fax\n    ) anonymous;\n\n    modifier note {\n        bytes32 foo;\n        bytes32 bar;\n\n        assembly {\n            foo := calldataload(4)\n            bar := calldataload(36)\n        }\n\n        emit LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data);\n\n        _;\n    }\n}\n"
			},
			"ds-auth/auth.sol": {
				"content": "// SPDX-License-Identifier: GNU-3\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\npragma solidity ^0.8.13;\n\ninterface DSAuthority {\n    function canCall(\n        address src, address dst, bytes4 sig\n    ) external view returns (bool);\n}\n\ncontract DSAuthEvents {\n    event LogSetAuthority (address indexed authority);\n    event LogSetOwner     (address indexed owner);\n}\n\ncontract DSAuth is DSAuthEvents {\n    DSAuthority  public  authority;\n    address      public  owner;\n\n    constructor() public {\n        owner = msg.sender;\n        emit LogSetOwner(msg.sender);\n    }\n\n    function setOwner(address owner_)\n        public\n        auth\n    {\n        owner = owner_;\n        emit LogSetOwner(owner);\n    }\n\n    function setAuthority(DSAuthority authority_)\n        public\n        auth\n    {\n        authority = authority_;\n        emit LogSetAuthority(address(authority));\n    }\n\n    modifier auth {\n        require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\");\n        _;\n    }\n\n    function isAuthorized(address src, bytes4 sig) internal view returns (bool) {\n        if (src == address(this)) {\n            return true;\n        } else if (src == owner) {\n            return true;\n        } else if (authority == DSAuthority(address(0))) {\n            return false;\n        } else {\n            return authority.canCall(src, address(this), sig);\n        }\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ds-auth/auth.sol": {
				"DSAuth": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "authority",
									"type": "address"
								}
							],
							"name": "LogSetAuthority",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "LogSetOwner",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "authority",
							"outputs": [
								{
									"internalType": "contract DSAuthority",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract DSAuthority",
									"name": "authority_",
									"type": "address"
								}
							],
							"name": "setAuthority",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ds-auth/auth.sol\":966:1977  contract DSAuth is DSAuthEvents {... */\n  mstore(0x40, 0x80)\n    /* \"ds-auth/auth.sol\":1073:1167  constructor() public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ds-auth/auth.sol\":1104:1109  owner */\n  0x01\n    /* \"ds-auth/auth.sol\":1104:1122  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"ds-auth/auth.sol\":1112:1122  msg.sender */\n  caller\n    /* \"ds-auth/auth.sol\":1104:1122  owner = msg.sender */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"ds-auth/auth.sol\":1137:1160  LogSetOwner(msg.sender) */\n  mload(0x40)\n  0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94\n  swap1\n    /* \"ds-auth/auth.sol\":1104:1109  owner */\n  0x00\n  swap1\n    /* \"ds-auth/auth.sol\":1137:1160  LogSetOwner(msg.sender) */\n  log2\n    /* \"ds-auth/auth.sol\":966:1977  contract DSAuth is DSAuthEvents {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ds-auth/auth.sol\":966:1977  contract DSAuth is DSAuthEvents {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x13af4035\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7a9e5e4b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbf7e214f\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ds-auth/auth.sol\":1173:1303  function setOwner(address owner_)... */\n    tag_3:\n      tag_7\n      tag_8\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"ds-auth/auth.sol\":1309:1476  function setAuthority(DSAuthority authority_)... */\n    tag_4:\n      tag_7\n      tag_12\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n        /* \"ds-auth/auth.sol\":1040:1066  address      public  owner */\n    tag_5:\n      sload(0x01)\n      tag_15\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_15:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":836:868   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":818:869   */\n      dup2\n      mstore\n        /* \"#utility.yul\":806:808   */\n      0x20\n        /* \"#utility.yul\":791:809   */\n      add\n        /* \"ds-auth/auth.sol\":1040:1066  address      public  owner */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ds-auth/auth.sol\":1004:1034  DSAuthority  public  authority */\n    tag_6:\n      sload(0x00)\n      tag_15\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"ds-auth/auth.sol\":1173:1303  function setOwner(address owner_)... */\n    tag_10:\n        /* \"ds-auth/auth.sol\":1514:1547  isAuthorized(msg.sender, msg.sig) */\n      tag_24\n        /* \"ds-auth/auth.sol\":1527:1537  msg.sender */\n      caller\n        /* \"ds-auth/auth.sol\":1539:1546  msg.sig */\n      and(not(sub(shl(0xe0, 0x01), 0x01)), calldataload(0x00))\n        /* \"ds-auth/auth.sol\":1514:1526  isAuthorized */\n      tag_25\n        /* \"ds-auth/auth.sol\":1514:1547  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_24:\n        /* \"ds-auth/auth.sol\":1506:1572  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      tag_26\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1308:1310   */\n      0x20\n        /* \"ds-auth/auth.sol\":1506:1572  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1290:1311   */\n      mstore\n        /* \"#utility.yul\":1347:1349   */\n      0x14\n        /* \"#utility.yul\":1327:1345   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1320:1350   */\n      mstore\n      shl(0x62, 0x191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e9959)\n        /* \"#utility.yul\":1366:1384   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1359:1409   */\n      mstore\n        /* \"#utility.yul\":1426:1444   */\n      0x64\n      add\n        /* \"ds-auth/auth.sol\":1506:1572  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_26:\n        /* \"ds-auth/auth.sol\":1249:1254  owner */\n      0x01\n        /* \"ds-auth/auth.sol\":1249:1263  owner = owner_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ds-auth/auth.sol\":1278:1296  LogSetOwner(owner) */\n      mload(0x40)\n      0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"ds-auth/auth.sol\":1173:1303  function setOwner(address owner_)... */\n      pop\n      jump\t// out\n        /* \"ds-auth/auth.sol\":1309:1476  function setAuthority(DSAuthority authority_)... */\n    tag_14:\n        /* \"ds-auth/auth.sol\":1514:1547  isAuthorized(msg.sender, msg.sig) */\n      tag_31\n        /* \"ds-auth/auth.sol\":1527:1537  msg.sender */\n      caller\n        /* \"ds-auth/auth.sol\":1539:1546  msg.sig */\n      and(not(sub(shl(0xe0, 0x01), 0x01)), calldataload(0x00))\n        /* \"ds-auth/auth.sol\":1514:1526  isAuthorized */\n      tag_25\n        /* \"ds-auth/auth.sol\":1514:1547  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_31:\n        /* \"ds-auth/auth.sol\":1506:1572  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1308:1310   */\n      0x20\n        /* \"ds-auth/auth.sol\":1506:1572  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1290:1311   */\n      mstore\n        /* \"#utility.yul\":1347:1349   */\n      0x14\n        /* \"#utility.yul\":1327:1345   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1320:1350   */\n      mstore\n      shl(0x62, 0x191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e9959)\n        /* \"#utility.yul\":1366:1384   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1359:1409   */\n      mstore\n        /* \"#utility.yul\":1426:1444   */\n      0x64\n      add\n        /* \"ds-auth/auth.sol\":1506:1572  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      tag_27\n        /* \"#utility.yul\":1106:1450   */\n      jump\n        /* \"ds-auth/auth.sol\":1506:1572  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n    tag_32:\n        /* \"ds-auth/auth.sol\":1397:1406  authority */\n      0x00\n        /* \"ds-auth/auth.sol\":1397:1419  authority = authority_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      dup3\n      sstore\n        /* \"ds-auth/auth.sol\":1434:1469  LogSetAuthority(address(authority)) */\n      mload(0x40)\n        /* \"ds-auth/auth.sol\":1397:1419  authority = authority_ */\n      swap1\n      swap2\n        /* \"ds-auth/auth.sol\":1434:1469  LogSetAuthority(address(authority)) */\n      0x1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada4\n      swap2\n      log2\n        /* \"ds-auth/auth.sol\":1309:1476  function setAuthority(DSAuthority authority_)... */\n      pop\n      jump\t// out\n        /* \"ds-auth/auth.sol\":1596:1975  function isAuthorized(address src, bytes4 sig) internal view returns (bool) {... */\n    tag_25:\n        /* \"ds-auth/auth.sol\":1666:1670  bool */\n      0x00\n        /* \"ds-auth/auth.sol\":1701:1705  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ds-auth/auth.sol\":1686:1706  src == address(this) */\n      dup5\n      and\n      sub\n        /* \"ds-auth/auth.sol\":1682:1969  if (src == address(this)) {... */\n      tag_36\n      jumpi\n      pop\n        /* \"ds-auth/auth.sol\":1729:1733  true */\n      0x01\n        /* \"ds-auth/auth.sol\":1722:1733  return true */\n      jump(tag_41)\n        /* \"ds-auth/auth.sol\":1682:1969  if (src == address(this)) {... */\n    tag_36:\n        /* \"ds-auth/auth.sol\":1761:1766  owner */\n      sload(0x01)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ds-auth/auth.sol\":1754:1766  src == owner */\n      swap1\n      dup5\n      and\n      sub\n        /* \"ds-auth/auth.sol\":1750:1969  if (src == owner) {... */\n      tag_38\n      jumpi\n      pop\n        /* \"ds-auth/auth.sol\":1789:1793  true */\n      0x01\n        /* \"ds-auth/auth.sol\":1782:1793  return true */\n      jump(tag_41)\n        /* \"ds-auth/auth.sol\":1750:1969  if (src == owner) {... */\n    tag_38:\n        /* \"ds-auth/auth.sol\":1847:1848  0 */\n      0x00\n        /* \"ds-auth/auth.sol\":1814:1823  authority */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ds-auth/auth.sol\":1810:1969  if (authority == DSAuthority(address(0))) {... */\n      tag_40\n      jumpi\n      pop\n        /* \"ds-auth/auth.sol\":1873:1878  false */\n      0x00\n        /* \"ds-auth/auth.sol\":1866:1878  return false */\n      jump(tag_41)\n        /* \"ds-auth/auth.sol\":1810:1969  if (authority == DSAuthority(address(0))) {... */\n    tag_40:\n        /* \"ds-auth/auth.sol\":1916:1925  authority */\n      sload(0x00)\n        /* \"ds-auth/auth.sol\":1916:1958  authority.canCall(src, address(this), sig) */\n      mload(0x40)\n      shl(0xe0, 0xb7009613)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1711:1726   */\n      dup6\n      dup2\n      and\n        /* \"ds-auth/auth.sol\":1916:1958  authority.canCall(src, address(this), sig) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1693:1727   */\n      mstore\n        /* \"ds-auth/auth.sol\":1947:1951  this */\n      address\n        /* \"#utility.yul\":1743:1761   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":1736:1779   */\n      mstore\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":1815:1848   */\n      dup6\n      and\n        /* \"#utility.yul\":1795:1813   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":1788:1849   */\n      mstore\n        /* \"ds-auth/auth.sol\":1916:1925  authority */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ds-auth/auth.sol\":1916:1933  authority.canCall */\n      0xb7009613\n      swap1\n        /* \"#utility.yul\":1628:1646   */\n      0x64\n      add\n        /* \"ds-auth/auth.sol\":1916:1958  authority.canCall(src, address(this), sig) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_45\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_45:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"ds-auth/auth.sol\":1909:1958  return authority.canCall(src, address(this), sig) */\n      swap1\n      pop\n        /* \"ds-auth/auth.sol\":1810:1969  if (authority == DSAuthority(address(0))) {... */\n    tag_41:\n        /* \"ds-auth/auth.sol\":1596:1975  function isAuthorized(address src, bytes4 sig) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_51\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":69:139   */\n    tag_51:\n        /* \"#utility.yul\":14:145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:397   */\n    tag_9:\n        /* \"#utility.yul\":209:215   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":250:259   */\n      dup3\n        /* \"#utility.yul\":241:248   */\n      dup5\n        /* \"#utility.yul\":237:260   */\n      sub\n        /* \"#utility.yul\":233:265   */\n      slt\n        /* \"#utility.yul\":230:282   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":278:279   */\n      0x00\n        /* \"#utility.yul\":275:276   */\n      dup1\n        /* \"#utility.yul\":268:280   */\n      revert\n        /* \"#utility.yul\":230:282   */\n    tag_53:\n        /* \"#utility.yul\":317:326   */\n      dup2\n        /* \"#utility.yul\":304:327   */\n      calldataload\n        /* \"#utility.yul\":336:367   */\n      tag_54\n        /* \"#utility.yul\":361:366   */\n      dup2\n        /* \"#utility.yul\":336:367   */\n      tag_48\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":386:391   */\n      swap4\n        /* \"#utility.yul\":150:397   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1860:2137   */\n    tag_47:\n        /* \"#utility.yul\":1927:1933   */\n      0x00\n        /* \"#utility.yul\":1980:1982   */\n      0x20\n        /* \"#utility.yul\":1968:1977   */\n      dup3\n        /* \"#utility.yul\":1959:1966   */\n      dup5\n        /* \"#utility.yul\":1955:1978   */\n      sub\n        /* \"#utility.yul\":1951:1983   */\n      slt\n        /* \"#utility.yul\":1948:2000   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1996:1997   */\n      0x00\n        /* \"#utility.yul\":1993:1994   */\n      dup1\n        /* \"#utility.yul\":1986:1998   */\n      revert\n        /* \"#utility.yul\":1948:2000   */\n    tag_63:\n        /* \"#utility.yul\":2028:2037   */\n      dup2\n        /* \"#utility.yul\":2022:2038   */\n      mload\n        /* \"#utility.yul\":2081:2086   */\n      dup1\n        /* \"#utility.yul\":2074:2087   */\n      iszero\n        /* \"#utility.yul\":2067:2088   */\n      iszero\n        /* \"#utility.yul\":2060:2065   */\n      dup2\n        /* \"#utility.yul\":2057:2089   */\n      eq\n        /* \"#utility.yul\":2047:2107   */\n      tag_54\n      jumpi\n        /* \"#utility.yul\":2103:2104   */\n      0x00\n        /* \"#utility.yul\":2100:2101   */\n      dup1\n        /* \"#utility.yul\":2093:2105   */\n      revert\n\n    auxdata: 0xa2646970667358221220d79ce1cafb0c7043d493bec4c07395c420cd3a600dd90a15f749cdda228cbeaf64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_43": {
									"entryPoint": null,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600180546001600160a01b031916339081179091556040517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94905f90a26103618061005a5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c806313af40351461004e5780637a9e5e4b146100635780638da5cb5b14610076578063bf7e214f146100a5575b5f80fd5b61006161005c3660046102ea565b6100b7565b005b6100616100713660046102ea565b61015d565b600154610089906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b5f54610089906001600160a01b031681565b6100cc335f356001600160e01b0319166101fc565b6101145760405162461bcd60e51b8152602060048201526014602482015273191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e995960621b60448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94905f90a250565b610172335f356001600160e01b0319166101fc565b6101b55760405162461bcd60e51b8152602060048201526014602482015273191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e995960621b604482015260640161010b565b5f80546001600160a01b0319166001600160a01b038316908117825560405190917f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada491a250565b5f306001600160a01b03841603610215575060016102cd565b6001546001600160a01b0390811690841603610233575060016102cd565b5f546001600160a01b031661024957505f6102cd565b5f5460405163b700961360e01b81526001600160a01b0385811660048301523060248301526001600160e01b0319851660448301529091169063b700961390606401602060405180830381865afa1580156102a6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102ca919061030c565b90505b92915050565b6001600160a01b03811681146102e7575f80fd5b50565b5f602082840312156102fa575f80fd5b8135610305816102d3565b9392505050565b5f6020828403121561031c575f80fd5b81518015158114610305575f80fdfea2646970667358221220d79ce1cafb0c7043d493bec4c07395c420cd3a600dd90a15f749cdda228cbeaf64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 SWAP1 PUSH0 SWAP1 LOG2 PUSH2 0x361 DUP1 PUSH2 0x5A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0x5C CALLDATASIZE PUSH1 0x4 PUSH2 0x2EA JUMP JUMPDEST PUSH2 0xB7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x61 PUSH2 0x71 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EA JUMP JUMPDEST PUSH2 0x15D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x89 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SLOAD PUSH2 0x89 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xCC CALLER PUSH0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x114 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x191CCB585D5D1A0B5D5B985D5D1A1BDC9A5E9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x172 CALLER PUSH0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x1B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x191CCB585D5D1A0B5D5B985D5D1A1BDC9A5E9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x10B JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4 SWAP2 LOG2 POP JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SUB PUSH2 0x215 JUMPI POP PUSH1 0x1 PUSH2 0x2CD JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND SUB PUSH2 0x233 JUMPI POP PUSH1 0x1 PUSH2 0x2CD JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x249 JUMPI POP PUSH0 PUSH2 0x2CD JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x305 DUP2 PUSH2 0x2D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x305 JUMPI PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 SWAP13 0xE1 0xCA 0xFB 0xC PUSH17 0x43D493BEC4C07395C420CD3A600DD90A15 0xF7 0x49 0xCD 0xDA 0x22 DUP13 0xBE 0xAF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "966:1011:0:-:0;;;1073:94;;;;;;;;;-1:-1:-1;1104:5:0;:18;;-1:-1:-1;;;;;;1104:18:0;1112:10;1104:18;;;;;;1137:23;;;;1104:5;;1137:23;966:1011;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@authority_27": {
									"entryPoint": null,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isAuthorized_143": {
									"entryPoint": 508,
									"id": 143,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAuthority_79": {
									"entryPoint": 349,
									"id": 79,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setOwner_59": {
									"entryPoint": 183,
									"id": 59,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_DSAuthority_$13": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_DSAuthority_$13__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_166b1fe4059d096071443d23428666de4ceaca5dfeecf186a801a33a4cdbddd9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2139:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:5"
															},
															"nodeType": "YulIf",
															"src": "69:70:5"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:5",
														"type": ""
													}
												],
												"src": "14:131:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "220:177:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "266:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "275:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "278:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "268:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "268:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "268:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "241:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "250:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "237:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "237:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "233:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "233:32:5"
															},
															"nodeType": "YulIf",
															"src": "230:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "291:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "317:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "304:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "304:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "295:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "361:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "336:24:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:31:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "376:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "386:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "376:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "186:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "197:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "209:6:5",
														"type": ""
													}
												],
												"src": "150:247:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "490:177:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "536:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "545:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "548:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "538:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "538:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "538:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "511:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "520:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "532:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "503:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "503:32:5"
															},
															"nodeType": "YulIf",
															"src": "500:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "561:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "587:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "574:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "574:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "565:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "631:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "606:24:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "606:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "606:31:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "646:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "656:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "646:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_DSAuthority_$13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "456:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "467:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "479:6:5",
														"type": ""
													}
												],
												"src": "402:265:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "773:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "783:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "795:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "806:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "791:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "791:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "783:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "825:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "840:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "856:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "861:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "852:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "852:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "865:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "848:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "848:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "836:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "836:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "818:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "818:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "742:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "753:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "764:4:5",
														"type": ""
													}
												],
												"src": "672:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "999:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1009:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1021:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1032:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1017:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1009:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1051:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1066:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1082:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1087:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1078:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1078:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1091:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1074:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1074:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1062:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1062:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1044:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1044:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1044:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_DSAuthority_$13__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "979:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "990:4:5",
														"type": ""
													}
												],
												"src": "880:221:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:170:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1297:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1290:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1290:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1290:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1331:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1342:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1327:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1327:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1347:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1320:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1320:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1320:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1370:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1381:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1366:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1366:18:5"
																	},
																	{
																		"hexValue": "64732d617574682d756e617574686f72697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1386:22:5",
																		"type": "",
																		"value": "ds-auth-unauthorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1359:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1359:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1359:50:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1418:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1430:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1441:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1426:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1418:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_166b1fe4059d096071443d23428666de4ceaca5dfeecf186a801a33a4cdbddd9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1257:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1271:4:5",
														"type": ""
													}
												],
												"src": "1106:344:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1610:245:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1620:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1632:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1643:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1628:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1620:4:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1655:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1673:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1678:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1669:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1669:11:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1665:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1665:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1659:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1700:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1715:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1723:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1711:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1693:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1693:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1747:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1758:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1743:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1743:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1767:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1775:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1763:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1763:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1736:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1736:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1736:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1799:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1810:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1795:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1795:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "1819:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1831:3:5",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1836:10:5",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1827:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:20:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1815:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1815:33:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1788:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1788:61:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1788:61:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1563:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1574:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1582:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1590:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1601:4:5",
														"type": ""
													}
												],
												"src": "1455:400:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1938:199:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1984:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1993:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1996:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1986:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1986:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1986:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1959:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1968:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1955:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1955:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1980:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1951:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1951:32:5"
															},
															"nodeType": "YulIf",
															"src": "1948:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2009:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2028:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2022:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2022:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2013:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2091:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2100:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2103:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2093:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2093:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2093:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2060:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2081:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2074:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2074:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2067:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2067:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2057:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2057:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2050:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2050:40:5"
															},
															"nodeType": "YulIf",
															"src": "2047:60:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2116:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2126:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2116:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1904:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1915:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1927:6:5",
														"type": ""
													}
												],
												"src": "1860:277:5"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_DSAuthority_$13(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_DSAuthority_$13__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_166b1fe4059d096071443d23428666de4ceaca5dfeecf186a801a33a4cdbddd9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"ds-auth-unauthorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c806313af40351461004e5780637a9e5e4b146100635780638da5cb5b14610076578063bf7e214f146100a5575b5f80fd5b61006161005c3660046102ea565b6100b7565b005b6100616100713660046102ea565b61015d565b600154610089906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b5f54610089906001600160a01b031681565b6100cc335f356001600160e01b0319166101fc565b6101145760405162461bcd60e51b8152602060048201526014602482015273191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e995960621b60448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94905f90a250565b610172335f356001600160e01b0319166101fc565b6101b55760405162461bcd60e51b8152602060048201526014602482015273191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e995960621b604482015260640161010b565b5f80546001600160a01b0319166001600160a01b038316908117825560405190917f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada491a250565b5f306001600160a01b03841603610215575060016102cd565b6001546001600160a01b0390811690841603610233575060016102cd565b5f546001600160a01b031661024957505f6102cd565b5f5460405163b700961360e01b81526001600160a01b0385811660048301523060248301526001600160e01b0319851660448301529091169063b700961390606401602060405180830381865afa1580156102a6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102ca919061030c565b90505b92915050565b6001600160a01b03811681146102e7575f80fd5b50565b5f602082840312156102fa575f80fd5b8135610305816102d3565b9392505050565b5f6020828403121561031c575f80fd5b81518015158114610305575f80fdfea2646970667358221220d79ce1cafb0c7043d493bec4c07395c420cd3a600dd90a15f749cdda228cbeaf64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0x5C CALLDATASIZE PUSH1 0x4 PUSH2 0x2EA JUMP JUMPDEST PUSH2 0xB7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x61 PUSH2 0x71 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EA JUMP JUMPDEST PUSH2 0x15D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x89 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SLOAD PUSH2 0x89 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xCC CALLER PUSH0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x114 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x191CCB585D5D1A0B5D5B985D5D1A1BDC9A5E9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x172 CALLER PUSH0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x1B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x191CCB585D5D1A0B5D5B985D5D1A1BDC9A5E9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x10B JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4 SWAP2 LOG2 POP JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SUB PUSH2 0x215 JUMPI POP PUSH1 0x1 PUSH2 0x2CD JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND SUB PUSH2 0x233 JUMPI POP PUSH1 0x1 PUSH2 0x2CD JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x249 JUMPI POP PUSH0 PUSH2 0x2CD JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x305 DUP2 PUSH2 0x2D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x305 JUMPI PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD7 SWAP13 0xE1 0xCA 0xFB 0xC PUSH17 0x43D493BEC4C07395C420CD3A600DD90A15 0xF7 0x49 0xCD 0xDA 0x22 DUP13 0xBE 0xAF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "966:1011:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1173:130;;;;;;:::i;:::-;;:::i;:::-;;1309:167;;;;;;:::i;:::-;;:::i;1040:26::-;;;;;-1:-1:-1;;;;;1040:26:0;;;;;;-1:-1:-1;;;;;836:32:5;;;818:51;;806:2;791:18;1040:26:0;;;;;;;1004:30;;;;;-1:-1:-1;;;;;1004:30:0;;;1173:130;1514:33;1527:10;1539:7;;-1:-1:-1;;;;;;1539:7:0;1514:12;:33::i;:::-;1506:66;;;;-1:-1:-1;;;1506:66:0;;1308:2:5;1506:66:0;;;1290:21:5;1347:2;1327:18;;;1320:30;-1:-1:-1;;;1366:18:5;;;1359:50;1426:18;;1506:66:0;;;;;;;;;1249:5:::1;:14:::0;;-1:-1:-1;;;;;;1249:14:0::1;-1:-1:-1::0;;;;;1249:14:0;::::1;::::0;;::::1;::::0;;;1278:18:::1;::::0;::::1;::::0;-1:-1:-1;;1278:18:0::1;1173:130:::0;:::o;1309:167::-;1514:33;1527:10;1539:7;;-1:-1:-1;;;;;;1539:7:0;1514:12;:33::i;:::-;1506:66;;;;-1:-1:-1;;;1506:66:0;;1308:2:5;1506:66:0;;;1290:21:5;1347:2;1327:18;;;1320:30;-1:-1:-1;;;1366:18:5;;;1359:50;1426:18;;1506:66:0;1106:344:5;1506:66:0;1397:9:::1;:22:::0;;-1:-1:-1;;;;;;1397:22:0::1;-1:-1:-1::0;;;;;1397:22:0;::::1;::::0;;::::1;::::0;;1434:35:::1;::::0;1397:22;;1434:35:::1;::::0;::::1;1309:167:::0;:::o;1596:379::-;1666:4;1701;-1:-1:-1;;;;;1686:20:0;;;1682:287;;-1:-1:-1;1729:4:0;1722:11;;1682:287;1761:5;;-1:-1:-1;;;;;1761:5:0;;;1754:12;;;;1750:219;;-1:-1:-1;1789:4:0;1782:11;;1750:219;1847:1;1814:9;-1:-1:-1;;;;;1814:9:0;1810:159;;-1:-1:-1;1873:5:0;1866:12;;1810:159;1916:9;;:42;;-1:-1:-1;;;1916:42:0;;-1:-1:-1;;;;;1711:15:5;;;1916:42:0;;;1693:34:5;1947:4:0;1743:18:5;;;1736:43;-1:-1:-1;;;;;;1815:33:5;;1795:18;;;1788:61;1916:9:0;;;;:17;;1628:18:5;;1916:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1909:49;;1810:159;1596:379;;;;:::o;14:131:5:-;-1:-1:-1;;;;;89:31:5;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:247::-;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:5:o;1860:277::-;1927:6;1980:2;1968:9;1959:7;1955:23;1951:32;1948:52;;;1996:1;1993;1986:12;1948:52;2028:9;2022:16;2081:5;2074:13;2067:21;2060:5;2057:32;2047:60;;2103:1;2100;2093:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "173000",
								"executionCost": "25604",
								"totalCost": "198604"
							},
							"external": {
								"authority()": "2367",
								"owner()": "2346",
								"setAuthority(address)": "infinite",
								"setOwner(address)": "infinite"
							},
							"internal": {
								"isAuthorized(address,bytes4)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 966,
									"end": 1977,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 966,
									"end": 1977,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 966,
									"end": 1977,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1073,
									"end": 1167,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1073,
									"end": 1167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1073,
									"end": 1167,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1073,
									"end": 1167,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1073,
									"end": 1167,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1073,
									"end": 1167,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1073,
									"end": 1167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1073,
									"end": 1167,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1073,
									"end": 1167,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1073,
									"end": 1167,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1104,
									"end": 1109,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1112,
									"end": 1122,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1160,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1137,
									"end": 1160,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1160,
									"name": "PUSH",
									"source": 0,
									"value": "CE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94"
								},
								{
									"begin": 1137,
									"end": 1160,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1109,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1104,
									"end": 1109,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1160,
									"name": "LOG2",
									"source": 0
								},
								{
									"begin": 966,
									"end": 1977,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 966,
									"end": 1977,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 966,
									"end": 1977,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 966,
									"end": 1977,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 966,
									"end": 1977,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 966,
									"end": 1977,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 966,
									"end": 1977,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d79ce1cafb0c7043d493bec4c07395c420cd3a600dd90a15f749cdda228cbeaf64736f6c63430008140033",
									".code": [
										{
											"begin": 966,
											"end": 1977,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "PUSH",
											"source": 0,
											"value": "13AF4035"
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "PUSH",
											"source": 0,
											"value": "7A9E5E4B"
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "PUSH",
											"source": 0,
											"value": "BF7E214F"
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 966,
											"end": 1977,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1173,
											"end": 1303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1173,
											"end": 1303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1309,
											"end": 1476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1309,
											"end": 1476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 836,
											"end": 868,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 818,
											"end": 869,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 818,
											"end": 869,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 806,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 791,
											"end": 809,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1527,
											"end": 1537,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1514,
											"end": 1547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1547,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1514,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1311,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1347,
											"end": 1349,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191CCB585D5D1A0B5D5B985D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1409,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1444,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1426,
											"end": 1444,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1249,
											"end": 1263,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1278,
											"end": 1296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "CE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94"
										},
										{
											"begin": 1278,
											"end": 1296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1278,
											"end": 1296,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1527,
											"end": 1537,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1514,
											"end": 1547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1547,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1514,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1311,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1347,
											"end": 1349,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191CCB585D5D1A0B5D5B985D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1409,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1444,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1426,
											"end": 1444,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1106,
											"end": 1450,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1397,
											"end": 1419,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4"
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1469,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1975,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1596,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1705,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1682,
											"end": 1969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1722,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1722,
											"end": 1733,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1969,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1682,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1766,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1766,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1750,
											"end": 1969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1789,
											"end": 1793,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1782,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1782,
											"end": 1793,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1969,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1750,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1814,
											"end": 1823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1873,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1969,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B7009613"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1727,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 1951,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1743,
											"end": 1761,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1743,
											"end": 1761,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1743,
											"end": 1761,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1779,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1815,
											"end": 1848,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1815,
											"end": 1848,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1849,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "B7009613"
										},
										{
											"begin": 1916,
											"end": 1933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1646,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1628,
											"end": 1646,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1916,
											"end": 1958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1909,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1909,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1969,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1810,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1975,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 69,
											"end": 139,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14,
											"end": 145,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 150,
											"end": 397,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 150,
											"end": 397,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 209,
											"end": 215,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 259,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 241,
											"end": 248,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 237,
											"end": 260,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 233,
											"end": 265,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 230,
											"end": 282,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 230,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 278,
											"end": 279,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 276,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 268,
											"end": 280,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 230,
											"end": 282,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 317,
											"end": 326,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 304,
											"end": 327,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 361,
											"end": 366,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 336,
											"end": 367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 336,
											"end": 367,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 336,
											"end": 367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 386,
											"end": 391,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 150,
											"end": 397,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 150,
											"end": 397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1860,
											"end": 2137,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1860,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1982,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1968,
											"end": 1977,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1966,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1955,
											"end": 1978,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1983,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2000,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1948,
											"end": 2000,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 1997,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 1994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2000,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1948,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2037,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2022,
											"end": 2038,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2086,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2087,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2065,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2089,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2047,
											"end": 2107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2104,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2101,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2105,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"ds-auth/auth.sol",
								"ds-math/math.sol",
								"ds-note/note.sol",
								"ds-thing/thing.sol",
								"ds-value/value.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"authority()": "bf7e214f",
							"owner()": "8da5cb5b",
							"setAuthority(address)": "7a9e5e4b",
							"setOwner(address)": "13af4035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract DSAuthority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract DSAuthority\",\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ds-auth/auth.sol\":\"DSAuth\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ds-auth/auth.sol\":{\"keccak256\":\"0x9dd128620ddc1850d4af0a98738cc3d9a7e7797f5862e9eaed0b77659d5e8303\",\"license\":\"GNU-3\",\"urls\":[\"bzz-raw://22b41f32e304e97a48ecdc1e85962ebbae293c48558f43720d5018394aa7db5c\",\"dweb:/ipfs/QmPvHxR2SiKCv7a2DzC8Tg44TBdPXtCXmdRnDxGfXvy6qE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "ds-auth/auth.sol:DSAuth",
								"label": "authority",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(DSAuthority)13"
							},
							{
								"astId": 29,
								"contract": "ds-auth/auth.sol:DSAuth",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(DSAuthority)13": {
								"encoding": "inplace",
								"label": "contract DSAuthority",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"DSAuthEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "authority",
									"type": "address"
								}
							],
							"name": "LogSetAuthority",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "LogSetOwner",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ds-auth/auth.sol\":833:964  contract DSAuthEvents {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ds-auth/auth.sol\":833:964  contract DSAuthEvents {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220400ca7f541a77abb9fe09b35646a0ca4c465fe597b2f3fad5d63d0db5a15249e64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea2646970667358221220400ca7f541a77abb9fe09b35646a0ca4c465fe597b2f3fad5d63d0db5a15249e64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xC 0xA7 CREATE2 COINBASE 0xA7 PUSH27 0xBB9FE09B35646A0CA4C465FE597B2F3FAD5D63D0DB5A15249E6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "833:131:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea2646970667358221220400ca7f541a77abb9fe09b35646a0ca4c465fe597b2f3fad5d63d0db5a15249e64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xC 0xA7 CREATE2 COINBASE 0xA7 PUSH27 0xBB9FE09B35646A0CA4C465FE597B2F3FAD5D63D0DB5A15249E6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "833:131:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 833,
									"end": 964,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 833,
									"end": 964,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 833,
									"end": 964,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 833,
									"end": 964,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 833,
									"end": 964,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 833,
									"end": 964,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 833,
									"end": 964,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 833,
									"end": 964,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 833,
									"end": 964,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 964,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 833,
									"end": 964,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 833,
									"end": 964,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 833,
									"end": 964,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 833,
									"end": 964,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 833,
									"end": 964,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 833,
									"end": 964,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 833,
									"end": 964,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 833,
									"end": 964,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 964,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 833,
									"end": 964,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 833,
									"end": 964,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220400ca7f541a77abb9fe09b35646a0ca4c465fe597b2f3fad5d63d0db5a15249e64736f6c63430008140033",
									".code": [
										{
											"begin": 833,
											"end": 964,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 833,
											"end": 964,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 964,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 833,
											"end": 964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 833,
											"end": 964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 833,
											"end": 964,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"ds-auth/auth.sol",
								"ds-math/math.sol",
								"ds-note/note.sol",
								"ds-thing/thing.sol",
								"ds-value/value.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ds-auth/auth.sol\":\"DSAuthEvents\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ds-auth/auth.sol\":{\"keccak256\":\"0x9dd128620ddc1850d4af0a98738cc3d9a7e7797f5862e9eaed0b77659d5e8303\",\"license\":\"GNU-3\",\"urls\":[\"bzz-raw://22b41f32e304e97a48ecdc1e85962ebbae293c48558f43720d5018394aa7db5c\",\"dweb:/ipfs/QmPvHxR2SiKCv7a2DzC8Tg44TBdPXtCXmdRnDxGfXvy6qE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"DSAuthority": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "sig",
									"type": "bytes4"
								}
							],
							"name": "canCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"canCall(address,address,bytes4)": "b7009613"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"}],\"name\":\"canCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ds-auth/auth.sol\":\"DSAuthority\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ds-auth/auth.sol\":{\"keccak256\":\"0x9dd128620ddc1850d4af0a98738cc3d9a7e7797f5862e9eaed0b77659d5e8303\",\"license\":\"GNU-3\",\"urls\":[\"bzz-raw://22b41f32e304e97a48ecdc1e85962ebbae293c48558f43720d5018394aa7db5c\",\"dweb:/ipfs/QmPvHxR2SiKCv7a2DzC8Tg44TBdPXtCXmdRnDxGfXvy6qE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ds-math/math.sol": {
				"DSMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ds-math/math.sol\":722:3060  contract DSMath {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ds-math/math.sol\":722:3060  contract DSMath {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220882999feb1f19fd62261c10250b24e72a991c173e4c15e4f4c622c35be9b0eee64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea2646970667358221220882999feb1f19fd62261c10250b24e72a991c173e4c15e4f4c622c35be9b0eee64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x29 SWAP10 INVALID 0xB1 CALL SWAP16 0xD6 0x22 PUSH2 0xC102 POP 0xB2 0x4E PUSH19 0xA991C173E4C15E4F4C622C35BE9B0EEE64736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "722:2338:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea2646970667358221220882999feb1f19fd62261c10250b24e72a991c173e4c15e4f4c622c35be9b0eee64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x29 SWAP10 INVALID 0xB1 CALL SWAP16 0xD6 0x22 PUSH2 0xC102 POP 0xB2 0x4E PUSH19 0xA991C173E4C15E4F4C622C35BE9B0EEE64736F PUSH13 0x63430008140033000000000000 ",
							"sourceMap": "722:2338:1:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"imax(int256,int256)": "infinite",
								"imin(int256,int256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"rdiv(uint256,uint256)": "infinite",
								"rmul(uint256,uint256)": "infinite",
								"rpow(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"wdiv(uint256,uint256)": "infinite",
								"wmul(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 722,
									"end": 3060,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 722,
									"end": 3060,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 722,
									"end": 3060,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 722,
									"end": 3060,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 722,
									"end": 3060,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 722,
									"end": 3060,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 722,
									"end": 3060,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 722,
									"end": 3060,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 722,
									"end": 3060,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 3060,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 722,
									"end": 3060,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 722,
									"end": 3060,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 722,
									"end": 3060,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 722,
									"end": 3060,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 722,
									"end": 3060,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 722,
									"end": 3060,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 722,
									"end": 3060,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 722,
									"end": 3060,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 3060,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 722,
									"end": 3060,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 3060,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220882999feb1f19fd62261c10250b24e72a991c173e4c15e4f4c622c35be9b0eee64736f6c63430008140033",
									".code": [
										{
											"begin": 722,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 722,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 722,
											"end": 3060,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 722,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 722,
											"end": 3060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 722,
											"end": 3060,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"ds-auth/auth.sol",
								"ds-math/math.sol",
								"ds-note/note.sol",
								"ds-thing/thing.sol",
								"ds-value/value.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ds-math/math.sol\":\"DSMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ds-math/math.sol\":{\"keccak256\":\"0x8be286cf779d90081f362ad05487073efd6f11e850dfaebb7841493733116463\",\"urls\":[\"bzz-raw://6b392a407a80f01dd57046a0f32d0625f4d60060eb54a1af50b9b26eecf47d51\",\"dweb:/ipfs/QmcPNTHDNcsAaaBwZeXr2YiEGbKk2pR1TT56qK1x7ERXKu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ds-note/note.sol": {
				"DSNote": {
					"abi": [
						{
							"anonymous": true,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes4",
									"name": "sig",
									"type": "bytes4"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "guy",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "foo",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "bar",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "fax",
									"type": "bytes"
								}
							],
							"name": "LogNote",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ds-note/note.sol\":735:1232  contract DSNote {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ds-note/note.sol\":735:1232  contract DSNote {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220569d66b0c8bbc56c80afd4c7631c7a713e2facd7971a32445edabc7eec00aa1d64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea2646970667358221220569d66b0c8bbc56c80afd4c7631c7a713e2facd7971a32445edabc7eec00aa1d64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP SWAP14 PUSH7 0xB0C8BBC56C80AF 0xD4 0xC7 PUSH4 0x1C7A713E 0x2F 0xAC 0xD7 SWAP8 BYTE ORIGIN PREVRANDAO 0x5E 0xDA 0xBC PUSH31 0xEC00AA1D64736F6C6343000814003300000000000000000000000000000000 ",
							"sourceMap": "735:497:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea2646970667358221220569d66b0c8bbc56c80afd4c7631c7a713e2facd7971a32445edabc7eec00aa1d64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP SWAP14 PUSH7 0xB0C8BBC56C80AF 0xD4 0xC7 PUSH4 0x1C7A713E 0x2F 0xAC 0xD7 SWAP8 BYTE ORIGIN PREVRANDAO 0x5E 0xDA 0xBC PUSH31 0xEC00AA1D64736F6C6343000814003300000000000000000000000000000000 ",
							"sourceMap": "735:497:2:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 735,
									"end": 1232,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 735,
									"end": 1232,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 735,
									"end": 1232,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 735,
									"end": 1232,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 735,
									"end": 1232,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 735,
									"end": 1232,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 735,
									"end": 1232,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 735,
									"end": 1232,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 735,
									"end": 1232,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 1232,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 735,
									"end": 1232,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 735,
									"end": 1232,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 735,
									"end": 1232,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 735,
									"end": 1232,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 735,
									"end": 1232,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 735,
									"end": 1232,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 735,
									"end": 1232,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 735,
									"end": 1232,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 1232,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 735,
									"end": 1232,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 1232,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220569d66b0c8bbc56c80afd4c7631c7a713e2facd7971a32445edabc7eec00aa1d64736f6c63430008140033",
									".code": [
										{
											"begin": 735,
											"end": 1232,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 735,
											"end": 1232,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 735,
											"end": 1232,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 735,
											"end": 1232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 1232,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 735,
											"end": 1232,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"ds-auth/auth.sol",
								"ds-math/math.sol",
								"ds-note/note.sol",
								"ds-thing/thing.sol",
								"ds-value/value.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ds-note/note.sol\":\"DSNote\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ds-note/note.sol\":{\"keccak256\":\"0xb53e3f45f36bd04bf3b98efd874162bae0303e29b1c8cbdd331f48514684496b\",\"urls\":[\"bzz-raw://41a607fb6beaa3248e7fbebef435702dfa22efed6312eab76f15c4a3ca8661f2\",\"dweb:/ipfs/QmbSQxcw2ktZediTT1RQaafbxTDS3tZ9WgW4JtniiwApRu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ds-thing/thing.sol": {
				"DSThing": {
					"abi": [
						{
							"anonymous": true,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes4",
									"name": "sig",
									"type": "bytes4"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "guy",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "foo",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "bar",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "fax",
									"type": "bytes"
								}
							],
							"name": "LogNote",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "authority",
									"type": "address"
								}
							],
							"name": "LogSetAuthority",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "LogSetOwner",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "authority",
							"outputs": [
								{
									"internalType": "contract DSAuthority",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract DSAuthority",
									"name": "authority_",
									"type": "address"
								}
							],
							"name": "setAuthority",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ds-thing/thing.sol\":861:1025  contract DSThing is DSAuth, DSNote, DSMath {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ds-auth/auth.sol\":1104:1109  owner */\n  0x01\n    /* \"ds-auth/auth.sol\":1104:1122  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"ds-auth/auth.sol\":1112:1122  msg.sender */\n  caller\n    /* \"ds-auth/auth.sol\":1104:1122  owner = msg.sender */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"ds-auth/auth.sol\":1137:1160  LogSetOwner(msg.sender) */\n  mload(0x40)\n  0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94\n  swap1\n    /* \"ds-auth/auth.sol\":1104:1109  owner */\n  0x00\n  swap1\n    /* \"ds-auth/auth.sol\":1137:1160  LogSetOwner(msg.sender) */\n  log2\n    /* \"ds-thing/thing.sol\":861:1025  contract DSThing is DSAuth, DSNote, DSMath {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ds-thing/thing.sol\":861:1025  contract DSThing is DSAuth, DSNote, DSMath {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x13af4035\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7a9e5e4b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xbf7e214f\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ds-auth/auth.sol\":1173:1303  function setOwner(address owner_)... */\n    tag_3:\n      tag_7\n      tag_8\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"ds-auth/auth.sol\":1309:1476  function setAuthority(DSAuthority authority_)... */\n    tag_4:\n      tag_7\n      tag_12\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n        /* \"ds-auth/auth.sol\":1040:1066  address      public  owner */\n    tag_5:\n      sload(0x01)\n      tag_15\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_15:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":836:868   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":818:869   */\n      dup2\n      mstore\n        /* \"#utility.yul\":806:808   */\n      0x20\n        /* \"#utility.yul\":791:809   */\n      add\n        /* \"ds-auth/auth.sol\":1040:1066  address      public  owner */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ds-auth/auth.sol\":1004:1034  DSAuthority  public  authority */\n    tag_6:\n      sload(0x00)\n      tag_15\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"ds-auth/auth.sol\":1173:1303  function setOwner(address owner_)... */\n    tag_10:\n        /* \"ds-auth/auth.sol\":1514:1547  isAuthorized(msg.sender, msg.sig) */\n      tag_24\n        /* \"ds-auth/auth.sol\":1527:1537  msg.sender */\n      caller\n        /* \"ds-auth/auth.sol\":1539:1546  msg.sig */\n      and(not(sub(shl(0xe0, 0x01), 0x01)), calldataload(0x00))\n        /* \"ds-auth/auth.sol\":1514:1526  isAuthorized */\n      tag_25\n        /* \"ds-auth/auth.sol\":1514:1547  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_24:\n        /* \"ds-auth/auth.sol\":1506:1572  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      tag_26\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1308:1310   */\n      0x20\n        /* \"ds-auth/auth.sol\":1506:1572  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1290:1311   */\n      mstore\n        /* \"#utility.yul\":1347:1349   */\n      0x14\n        /* \"#utility.yul\":1327:1345   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1320:1350   */\n      mstore\n      shl(0x62, 0x191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e9959)\n        /* \"#utility.yul\":1366:1384   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1359:1409   */\n      mstore\n        /* \"#utility.yul\":1426:1444   */\n      0x64\n      add\n        /* \"ds-auth/auth.sol\":1506:1572  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_26:\n        /* \"ds-auth/auth.sol\":1249:1254  owner */\n      0x01\n        /* \"ds-auth/auth.sol\":1249:1263  owner = owner_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ds-auth/auth.sol\":1278:1296  LogSetOwner(owner) */\n      mload(0x40)\n      0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"ds-auth/auth.sol\":1173:1303  function setOwner(address owner_)... */\n      pop\n      jump\t// out\n        /* \"ds-auth/auth.sol\":1309:1476  function setAuthority(DSAuthority authority_)... */\n    tag_14:\n        /* \"ds-auth/auth.sol\":1514:1547  isAuthorized(msg.sender, msg.sig) */\n      tag_31\n        /* \"ds-auth/auth.sol\":1527:1537  msg.sender */\n      caller\n        /* \"ds-auth/auth.sol\":1539:1546  msg.sig */\n      and(not(sub(shl(0xe0, 0x01), 0x01)), calldataload(0x00))\n        /* \"ds-auth/auth.sol\":1514:1526  isAuthorized */\n      tag_25\n        /* \"ds-auth/auth.sol\":1514:1547  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_31:\n        /* \"ds-auth/auth.sol\":1506:1572  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1308:1310   */\n      0x20\n        /* \"ds-auth/auth.sol\":1506:1572  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1290:1311   */\n      mstore\n        /* \"#utility.yul\":1347:1349   */\n      0x14\n        /* \"#utility.yul\":1327:1345   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1320:1350   */\n      mstore\n      shl(0x62, 0x191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e9959)\n        /* \"#utility.yul\":1366:1384   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1359:1409   */\n      mstore\n        /* \"#utility.yul\":1426:1444   */\n      0x64\n      add\n        /* \"ds-auth/auth.sol\":1506:1572  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      tag_27\n        /* \"#utility.yul\":1106:1450   */\n      jump\n        /* \"ds-auth/auth.sol\":1506:1572  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n    tag_32:\n        /* \"ds-auth/auth.sol\":1397:1406  authority */\n      0x00\n        /* \"ds-auth/auth.sol\":1397:1419  authority = authority_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      dup3\n      sstore\n        /* \"ds-auth/auth.sol\":1434:1469  LogSetAuthority(address(authority)) */\n      mload(0x40)\n        /* \"ds-auth/auth.sol\":1397:1419  authority = authority_ */\n      swap1\n      swap2\n        /* \"ds-auth/auth.sol\":1434:1469  LogSetAuthority(address(authority)) */\n      0x1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada4\n      swap2\n      log2\n        /* \"ds-auth/auth.sol\":1309:1476  function setAuthority(DSAuthority authority_)... */\n      pop\n      jump\t// out\n        /* \"ds-auth/auth.sol\":1596:1975  function isAuthorized(address src, bytes4 sig) internal view returns (bool) {... */\n    tag_25:\n        /* \"ds-auth/auth.sol\":1666:1670  bool */\n      0x00\n        /* \"ds-auth/auth.sol\":1701:1705  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ds-auth/auth.sol\":1686:1706  src == address(this) */\n      dup5\n      and\n      sub\n        /* \"ds-auth/auth.sol\":1682:1969  if (src == address(this)) {... */\n      tag_36\n      jumpi\n      pop\n        /* \"ds-auth/auth.sol\":1729:1733  true */\n      0x01\n        /* \"ds-auth/auth.sol\":1722:1733  return true */\n      jump(tag_41)\n        /* \"ds-auth/auth.sol\":1682:1969  if (src == address(this)) {... */\n    tag_36:\n        /* \"ds-auth/auth.sol\":1761:1766  owner */\n      sload(0x01)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ds-auth/auth.sol\":1754:1766  src == owner */\n      swap1\n      dup5\n      and\n      sub\n        /* \"ds-auth/auth.sol\":1750:1969  if (src == owner) {... */\n      tag_38\n      jumpi\n      pop\n        /* \"ds-auth/auth.sol\":1789:1793  true */\n      0x01\n        /* \"ds-auth/auth.sol\":1782:1793  return true */\n      jump(tag_41)\n        /* \"ds-auth/auth.sol\":1750:1969  if (src == owner) {... */\n    tag_38:\n        /* \"ds-auth/auth.sol\":1847:1848  0 */\n      0x00\n        /* \"ds-auth/auth.sol\":1814:1823  authority */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ds-auth/auth.sol\":1810:1969  if (authority == DSAuthority(address(0))) {... */\n      tag_40\n      jumpi\n      pop\n        /* \"ds-auth/auth.sol\":1873:1878  false */\n      0x00\n        /* \"ds-auth/auth.sol\":1866:1878  return false */\n      jump(tag_41)\n        /* \"ds-auth/auth.sol\":1810:1969  if (authority == DSAuthority(address(0))) {... */\n    tag_40:\n        /* \"ds-auth/auth.sol\":1916:1925  authority */\n      sload(0x00)\n        /* \"ds-auth/auth.sol\":1916:1958  authority.canCall(src, address(this), sig) */\n      mload(0x40)\n      shl(0xe0, 0xb7009613)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1711:1726   */\n      dup6\n      dup2\n      and\n        /* \"ds-auth/auth.sol\":1916:1958  authority.canCall(src, address(this), sig) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1693:1727   */\n      mstore\n        /* \"ds-auth/auth.sol\":1947:1951  this */\n      address\n        /* \"#utility.yul\":1743:1761   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":1736:1779   */\n      mstore\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":1815:1848   */\n      dup6\n      and\n        /* \"#utility.yul\":1795:1813   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":1788:1849   */\n      mstore\n        /* \"ds-auth/auth.sol\":1916:1925  authority */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ds-auth/auth.sol\":1916:1933  authority.canCall */\n      0xb7009613\n      swap1\n        /* \"#utility.yul\":1628:1646   */\n      0x64\n      add\n        /* \"ds-auth/auth.sol\":1916:1958  authority.canCall(src, address(this), sig) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_45\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_45:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"ds-auth/auth.sol\":1909:1958  return authority.canCall(src, address(this), sig) */\n      swap1\n      pop\n        /* \"ds-auth/auth.sol\":1810:1969  if (authority == DSAuthority(address(0))) {... */\n    tag_41:\n        /* \"ds-auth/auth.sol\":1596:1975  function isAuthorized(address src, bytes4 sig) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_51\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":69:139   */\n    tag_51:\n        /* \"#utility.yul\":14:145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:397   */\n    tag_9:\n        /* \"#utility.yul\":209:215   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":250:259   */\n      dup3\n        /* \"#utility.yul\":241:248   */\n      dup5\n        /* \"#utility.yul\":237:260   */\n      sub\n        /* \"#utility.yul\":233:265   */\n      slt\n        /* \"#utility.yul\":230:282   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":278:279   */\n      0x00\n        /* \"#utility.yul\":275:276   */\n      dup1\n        /* \"#utility.yul\":268:280   */\n      revert\n        /* \"#utility.yul\":230:282   */\n    tag_53:\n        /* \"#utility.yul\":317:326   */\n      dup2\n        /* \"#utility.yul\":304:327   */\n      calldataload\n        /* \"#utility.yul\":336:367   */\n      tag_54\n        /* \"#utility.yul\":361:366   */\n      dup2\n        /* \"#utility.yul\":336:367   */\n      tag_48\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":386:391   */\n      swap4\n        /* \"#utility.yul\":150:397   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1860:2137   */\n    tag_47:\n        /* \"#utility.yul\":1927:1933   */\n      0x00\n        /* \"#utility.yul\":1980:1982   */\n      0x20\n        /* \"#utility.yul\":1968:1977   */\n      dup3\n        /* \"#utility.yul\":1959:1966   */\n      dup5\n        /* \"#utility.yul\":1955:1978   */\n      sub\n        /* \"#utility.yul\":1951:1983   */\n      slt\n        /* \"#utility.yul\":1948:2000   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1996:1997   */\n      0x00\n        /* \"#utility.yul\":1993:1994   */\n      dup1\n        /* \"#utility.yul\":1986:1998   */\n      revert\n        /* \"#utility.yul\":1948:2000   */\n    tag_63:\n        /* \"#utility.yul\":2028:2037   */\n      dup2\n        /* \"#utility.yul\":2022:2038   */\n      mload\n        /* \"#utility.yul\":2081:2086   */\n      dup1\n        /* \"#utility.yul\":2074:2087   */\n      iszero\n        /* \"#utility.yul\":2067:2088   */\n      iszero\n        /* \"#utility.yul\":2060:2065   */\n      dup2\n        /* \"#utility.yul\":2057:2089   */\n      eq\n        /* \"#utility.yul\":2047:2107   */\n      tag_54\n      jumpi\n        /* \"#utility.yul\":2103:2104   */\n      0x00\n        /* \"#utility.yul\":2100:2101   */\n      dup1\n        /* \"#utility.yul\":2093:2105   */\n      revert\n\n    auxdata: 0xa2646970667358221220c211131f48e7ae42facee817ca824bd903641f53907a7476e820cfb2b45ed61564736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_43": {
									"entryPoint": null,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600180546001600160a01b031916339081179091556040517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94905f90a26103618061005a5f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c806313af40351461004e5780637a9e5e4b146100635780638da5cb5b14610076578063bf7e214f146100a5575b5f80fd5b61006161005c3660046102ea565b6100b7565b005b6100616100713660046102ea565b61015d565b600154610089906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b5f54610089906001600160a01b031681565b6100cc335f356001600160e01b0319166101fc565b6101145760405162461bcd60e51b8152602060048201526014602482015273191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e995960621b60448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94905f90a250565b610172335f356001600160e01b0319166101fc565b6101b55760405162461bcd60e51b8152602060048201526014602482015273191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e995960621b604482015260640161010b565b5f80546001600160a01b0319166001600160a01b038316908117825560405190917f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada491a250565b5f306001600160a01b03841603610215575060016102cd565b6001546001600160a01b0390811690841603610233575060016102cd565b5f546001600160a01b031661024957505f6102cd565b5f5460405163b700961360e01b81526001600160a01b0385811660048301523060248301526001600160e01b0319851660448301529091169063b700961390606401602060405180830381865afa1580156102a6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102ca919061030c565b90505b92915050565b6001600160a01b03811681146102e7575f80fd5b50565b5f602082840312156102fa575f80fd5b8135610305816102d3565b9392505050565b5f6020828403121561031c575f80fd5b81518015158114610305575f80fdfea2646970667358221220c211131f48e7ae42facee817ca824bd903641f53907a7476e820cfb2b45ed61564736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 SWAP1 PUSH0 SWAP1 LOG2 PUSH2 0x361 DUP1 PUSH2 0x5A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0x5C CALLDATASIZE PUSH1 0x4 PUSH2 0x2EA JUMP JUMPDEST PUSH2 0xB7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x61 PUSH2 0x71 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EA JUMP JUMPDEST PUSH2 0x15D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x89 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SLOAD PUSH2 0x89 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xCC CALLER PUSH0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x114 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x191CCB585D5D1A0B5D5B985D5D1A1BDC9A5E9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x172 CALLER PUSH0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x1B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x191CCB585D5D1A0B5D5B985D5D1A1BDC9A5E9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x10B JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4 SWAP2 LOG2 POP JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SUB PUSH2 0x215 JUMPI POP PUSH1 0x1 PUSH2 0x2CD JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND SUB PUSH2 0x233 JUMPI POP PUSH1 0x1 PUSH2 0x2CD JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x249 JUMPI POP PUSH0 PUSH2 0x2CD JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x305 DUP2 PUSH2 0x2D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x305 JUMPI PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 GT SGT 0x1F BASEFEE 0xE7 0xAE TIMESTAMP STATICCALL 0xCE 0xE8 OR 0xCA DUP3 0x4B 0xD9 SUB PUSH5 0x1F53907A74 PUSH23 0xE820CFB2B45ED61564736F6C6343000814003300000000 ",
							"sourceMap": "861:164:3:-:0;;;;;;;;;;;;-1:-1:-1;1104:5:0;:18;;-1:-1:-1;;;;;;1104:18:0;1112:10;1104:18;;;;;;1137:23;;;;1104:5;;1137:23;861:164:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@authority_27": {
									"entryPoint": null,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isAuthorized_143": {
									"entryPoint": 508,
									"id": 143,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAuthority_79": {
									"entryPoint": 349,
									"id": 79,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setOwner_59": {
									"entryPoint": 183,
									"id": 59,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_DSAuthority_$13": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_DSAuthority_$13__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_166b1fe4059d096071443d23428666de4ceaca5dfeecf186a801a33a4cdbddd9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2139:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:5"
															},
															"nodeType": "YulIf",
															"src": "69:70:5"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:5",
														"type": ""
													}
												],
												"src": "14:131:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "220:177:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "266:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "275:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "278:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "268:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "268:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "268:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "241:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "250:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "237:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "237:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "233:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "233:32:5"
															},
															"nodeType": "YulIf",
															"src": "230:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "291:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "317:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "304:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "304:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "295:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "361:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "336:24:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:31:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "376:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "386:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "376:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "186:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "197:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "209:6:5",
														"type": ""
													}
												],
												"src": "150:247:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "490:177:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "536:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "545:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "548:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "538:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "538:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "538:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "511:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "520:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "532:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "503:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "503:32:5"
															},
															"nodeType": "YulIf",
															"src": "500:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "561:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "587:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "574:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "574:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "565:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "631:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "606:24:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "606:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "606:31:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "646:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "656:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "646:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_DSAuthority_$13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "456:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "467:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "479:6:5",
														"type": ""
													}
												],
												"src": "402:265:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "773:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "783:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "795:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "806:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "791:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "791:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "783:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "825:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "840:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "856:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "861:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "852:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "852:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "865:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "848:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "848:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "836:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "836:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "818:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "818:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "742:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "753:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "764:4:5",
														"type": ""
													}
												],
												"src": "672:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "999:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1009:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1021:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1032:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1017:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1009:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1051:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1066:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1082:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1087:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1078:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1078:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1091:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1074:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1074:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1062:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1062:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1044:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1044:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1044:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_DSAuthority_$13__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "968:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "979:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "990:4:5",
														"type": ""
													}
												],
												"src": "880:221:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:170:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1297:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1290:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1290:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1290:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1331:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1342:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1327:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1327:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1347:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1320:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1320:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1320:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1370:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1381:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1366:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1366:18:5"
																	},
																	{
																		"hexValue": "64732d617574682d756e617574686f72697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1386:22:5",
																		"type": "",
																		"value": "ds-auth-unauthorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1359:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1359:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1359:50:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1418:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1430:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1441:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1426:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1418:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_166b1fe4059d096071443d23428666de4ceaca5dfeecf186a801a33a4cdbddd9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1257:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1271:4:5",
														"type": ""
													}
												],
												"src": "1106:344:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1610:245:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1620:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1632:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1643:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1628:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1620:4:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1655:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1673:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1678:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1669:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1669:11:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1665:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1665:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1659:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1700:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1715:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1723:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1711:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1711:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1693:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1693:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1747:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1758:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1743:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1743:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1767:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1775:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1763:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1763:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1736:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1736:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1736:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1799:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1810:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1795:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1795:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "1819:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1831:3:5",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1836:10:5",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1827:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:20:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1815:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1815:33:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1788:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1788:61:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1788:61:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1563:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1574:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1582:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1590:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1601:4:5",
														"type": ""
													}
												],
												"src": "1455:400:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1938:199:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1984:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1993:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1996:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1986:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1986:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1986:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1959:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1968:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1955:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1955:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1980:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1951:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1951:32:5"
															},
															"nodeType": "YulIf",
															"src": "1948:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2009:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2028:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2022:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2022:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2013:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2091:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2100:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2103:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2093:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2093:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2093:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2060:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2081:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2074:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2074:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2067:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2067:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2057:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2057:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2050:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2050:40:5"
															},
															"nodeType": "YulIf",
															"src": "2047:60:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2116:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2126:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2116:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1904:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1915:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1927:6:5",
														"type": ""
													}
												],
												"src": "1860:277:5"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_DSAuthority_$13(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_DSAuthority_$13__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_166b1fe4059d096071443d23428666de4ceaca5dfeecf186a801a33a4cdbddd9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"ds-auth-unauthorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061004a575f3560e01c806313af40351461004e5780637a9e5e4b146100635780638da5cb5b14610076578063bf7e214f146100a5575b5f80fd5b61006161005c3660046102ea565b6100b7565b005b6100616100713660046102ea565b61015d565b600154610089906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b5f54610089906001600160a01b031681565b6100cc335f356001600160e01b0319166101fc565b6101145760405162461bcd60e51b8152602060048201526014602482015273191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e995960621b60448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94905f90a250565b610172335f356001600160e01b0319166101fc565b6101b55760405162461bcd60e51b8152602060048201526014602482015273191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e995960621b604482015260640161010b565b5f80546001600160a01b0319166001600160a01b038316908117825560405190917f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada491a250565b5f306001600160a01b03841603610215575060016102cd565b6001546001600160a01b0390811690841603610233575060016102cd565b5f546001600160a01b031661024957505f6102cd565b5f5460405163b700961360e01b81526001600160a01b0385811660048301523060248301526001600160e01b0319851660448301529091169063b700961390606401602060405180830381865afa1580156102a6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102ca919061030c565b90505b92915050565b6001600160a01b03811681146102e7575f80fd5b50565b5f602082840312156102fa575f80fd5b8135610305816102d3565b9392505050565b5f6020828403121561031c575f80fd5b81518015158114610305575f80fdfea2646970667358221220c211131f48e7ae42facee817ca824bd903641f53907a7476e820cfb2b45ed61564736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x4E JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0xA5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x61 PUSH2 0x5C CALLDATASIZE PUSH1 0x4 PUSH2 0x2EA JUMP JUMPDEST PUSH2 0xB7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x61 PUSH2 0x71 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EA JUMP JUMPDEST PUSH2 0x15D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x89 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SLOAD PUSH2 0x89 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xCC CALLER PUSH0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x114 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x191CCB585D5D1A0B5D5B985D5D1A1BDC9A5E9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x172 CALLER PUSH0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x1FC JUMP JUMPDEST PUSH2 0x1B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x191CCB585D5D1A0B5D5B985D5D1A1BDC9A5E9959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x10B JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4 SWAP2 LOG2 POP JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SUB PUSH2 0x215 JUMPI POP PUSH1 0x1 PUSH2 0x2CD JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND SUB PUSH2 0x233 JUMPI POP PUSH1 0x1 PUSH2 0x2CD JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x249 JUMPI POP PUSH0 PUSH2 0x2CD JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x30C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x305 DUP2 PUSH2 0x2D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x31C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x305 JUMPI PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 GT SGT 0x1F BASEFEE 0xE7 0xAE TIMESTAMP STATICCALL 0xCE 0xE8 OR 0xCA DUP3 0x4B 0xD9 SUB PUSH5 0x1F53907A74 PUSH23 0xE820CFB2B45ED61564736F6C6343000814003300000000 ",
							"sourceMap": "861:164:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1173:130:0;;;;;;:::i;:::-;;:::i;:::-;;1309:167;;;;;;:::i;:::-;;:::i;1040:26::-;;;;;-1:-1:-1;;;;;1040:26:0;;;;;;-1:-1:-1;;;;;836:32:5;;;818:51;;806:2;791:18;1040:26:0;;;;;;;1004:30;;;;;-1:-1:-1;;;;;1004:30:0;;;1173:130;1514:33;1527:10;1539:7;;-1:-1:-1;;;;;;1539:7:0;1514:12;:33::i;:::-;1506:66;;;;-1:-1:-1;;;1506:66:0;;1308:2:5;1506:66:0;;;1290:21:5;1347:2;1327:18;;;1320:30;-1:-1:-1;;;1366:18:5;;;1359:50;1426:18;;1506:66:0;;;;;;;;;1249:5:::1;:14:::0;;-1:-1:-1;;;;;;1249:14:0::1;-1:-1:-1::0;;;;;1249:14:0;::::1;::::0;;::::1;::::0;;;1278:18:::1;::::0;::::1;::::0;-1:-1:-1;;1278:18:0::1;1173:130:::0;:::o;1309:167::-;1514:33;1527:10;1539:7;;-1:-1:-1;;;;;;1539:7:0;1514:12;:33::i;:::-;1506:66;;;;-1:-1:-1;;;1506:66:0;;1308:2:5;1506:66:0;;;1290:21:5;1347:2;1327:18;;;1320:30;-1:-1:-1;;;1366:18:5;;;1359:50;1426:18;;1506:66:0;1106:344:5;1506:66:0;1397:9:::1;:22:::0;;-1:-1:-1;;;;;;1397:22:0::1;-1:-1:-1::0;;;;;1397:22:0;::::1;::::0;;::::1;::::0;;1434:35:::1;::::0;1397:22;;1434:35:::1;::::0;::::1;1309:167:::0;:::o;1596:379::-;1666:4;1701;-1:-1:-1;;;;;1686:20:0;;;1682:287;;-1:-1:-1;1729:4:0;1722:11;;1682:287;1761:5;;-1:-1:-1;;;;;1761:5:0;;;1754:12;;;;1750:219;;-1:-1:-1;1789:4:0;1782:11;;1750:219;1847:1;1814:9;-1:-1:-1;;;;;1814:9:0;1810:159;;-1:-1:-1;1873:5:0;1866:12;;1810:159;1916:9;;:42;;-1:-1:-1;;;1916:42:0;;-1:-1:-1;;;;;1711:15:5;;;1916:42:0;;;1693:34:5;1947:4:0;1743:18:5;;;1736:43;-1:-1:-1;;;;;;1815:33:5;;1795:18;;;1788:61;1916:9:0;;;;:17;;1628:18:5;;1916:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1909:49;;1810:159;1596:379;;;;:::o;14:131:5:-;-1:-1:-1;;;;;89:31:5;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:247::-;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:5:o;1860:277::-;1927:6;1980:2;1968:9;1959:7;1955:23;1951:32;1948:52;;;1996:1;1993;1986:12;1948:52;2028:9;2022:16;2081:5;2074:13;2067:21;2060:5;2057:32;2047:60;;2103:1;2100;2093:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "173000",
								"executionCost": "25604",
								"totalCost": "198604"
							},
							"external": {
								"authority()": "2367",
								"owner()": "2346",
								"setAuthority(address)": "infinite",
								"setOwner(address)": "infinite"
							},
							"internal": {
								"S(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 861,
									"end": 1025,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 861,
									"end": 1025,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 861,
									"end": 1025,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 861,
									"end": 1025,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 861,
									"end": 1025,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 861,
									"end": 1025,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 861,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 861,
									"end": 1025,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 861,
									"end": 1025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 861,
									"end": 1025,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 861,
									"end": 1025,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 861,
									"end": 1025,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 861,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1104,
									"end": 1109,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1112,
									"end": 1122,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1160,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1137,
									"end": 1160,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1160,
									"name": "PUSH",
									"source": 0,
									"value": "CE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94"
								},
								{
									"begin": 1137,
									"end": 1160,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1109,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1104,
									"end": 1109,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1160,
									"name": "LOG2",
									"source": 0
								},
								{
									"begin": 861,
									"end": 1025,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 861,
									"end": 1025,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 861,
									"end": 1025,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 861,
									"end": 1025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 861,
									"end": 1025,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 861,
									"end": 1025,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 861,
									"end": 1025,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c211131f48e7ae42facee817ca824bd903641f53907a7476e820cfb2b45ed61564736f6c63430008140033",
									".code": [
										{
											"begin": 861,
											"end": 1025,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "PUSH",
											"source": 3,
											"value": "13AF4035"
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "PUSH",
											"source": 3,
											"value": "7A9E5E4B"
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "PUSH",
											"source": 3,
											"value": "BF7E214F"
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 861,
											"end": 1025,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1173,
											"end": 1303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1173,
											"end": 1303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1309,
											"end": 1476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1309,
											"end": 1476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 836,
											"end": 868,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 818,
											"end": 869,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 818,
											"end": 869,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 806,
											"end": 808,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 791,
											"end": 809,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1527,
											"end": 1537,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1514,
											"end": 1547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1547,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1514,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1311,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1347,
											"end": 1349,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191CCB585D5D1A0B5D5B985D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1409,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1444,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1426,
											"end": 1444,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1249,
											"end": 1263,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1278,
											"end": 1296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "CE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94"
										},
										{
											"begin": 1278,
											"end": 1296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1278,
											"end": 1296,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1527,
											"end": 1537,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1514,
											"end": 1547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1547,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1514,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1311,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1347,
											"end": 1349,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1327,
											"end": 1345,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191CCB585D5D1A0B5D5B985D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1384,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1409,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1444,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1426,
											"end": 1444,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1106,
											"end": 1450,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1397,
											"end": 1419,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4"
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1469,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1975,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1596,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1705,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1682,
											"end": 1969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1722,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1722,
											"end": 1733,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1969,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1682,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1766,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1766,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1750,
											"end": 1969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1789,
											"end": 1793,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1782,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1782,
											"end": 1793,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1969,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1750,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1814,
											"end": 1823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1873,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1969,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B7009613"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1727,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 1951,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1743,
											"end": 1761,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1743,
											"end": 1761,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1743,
											"end": 1761,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1779,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1815,
											"end": 1848,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1815,
											"end": 1848,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1788,
											"end": 1849,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "B7009613"
										},
										{
											"begin": 1916,
											"end": 1933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1628,
											"end": 1646,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1628,
											"end": 1646,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1916,
											"end": 1958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1909,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1909,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1969,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1810,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1975,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 69,
											"end": 139,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14,
											"end": 145,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 150,
											"end": 397,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 150,
											"end": 397,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 209,
											"end": 215,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 259,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 241,
											"end": 248,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 237,
											"end": 260,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 233,
											"end": 265,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 230,
											"end": 282,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 230,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 278,
											"end": 279,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 276,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 268,
											"end": 280,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 230,
											"end": 282,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 317,
											"end": 326,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 304,
											"end": 327,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 361,
											"end": 366,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 336,
											"end": 367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 336,
											"end": 367,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 336,
											"end": 367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 386,
											"end": 391,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 150,
											"end": 397,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 150,
											"end": 397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1860,
											"end": 2137,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1860,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1927,
											"end": 1933,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1982,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1968,
											"end": 1977,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1966,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1955,
											"end": 1978,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1951,
											"end": 1983,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2000,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1948,
											"end": 2000,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 1997,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 1994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2000,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1948,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2037,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2022,
											"end": 2038,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2086,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2087,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2088,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2065,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2089,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2047,
											"end": 2107,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2104,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2100,
											"end": 2101,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2105,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"ds-auth/auth.sol",
								"ds-math/math.sol",
								"ds-note/note.sol",
								"ds-thing/thing.sol",
								"ds-value/value.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"authority()": "bf7e214f",
							"owner()": "8da5cb5b",
							"setAuthority(address)": "7a9e5e4b",
							"setOwner(address)": "13af4035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract DSAuthority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract DSAuthority\",\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ds-thing/thing.sol\":\"DSThing\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ds-auth/auth.sol\":{\"keccak256\":\"0x9dd128620ddc1850d4af0a98738cc3d9a7e7797f5862e9eaed0b77659d5e8303\",\"license\":\"GNU-3\",\"urls\":[\"bzz-raw://22b41f32e304e97a48ecdc1e85962ebbae293c48558f43720d5018394aa7db5c\",\"dweb:/ipfs/QmPvHxR2SiKCv7a2DzC8Tg44TBdPXtCXmdRnDxGfXvy6qE\"]},\"ds-math/math.sol\":{\"keccak256\":\"0x8be286cf779d90081f362ad05487073efd6f11e850dfaebb7841493733116463\",\"urls\":[\"bzz-raw://6b392a407a80f01dd57046a0f32d0625f4d60060eb54a1af50b9b26eecf47d51\",\"dweb:/ipfs/QmcPNTHDNcsAaaBwZeXr2YiEGbKk2pR1TT56qK1x7ERXKu\"]},\"ds-note/note.sol\":{\"keccak256\":\"0xb53e3f45f36bd04bf3b98efd874162bae0303e29b1c8cbdd331f48514684496b\",\"urls\":[\"bzz-raw://41a607fb6beaa3248e7fbebef435702dfa22efed6312eab76f15c4a3ca8661f2\",\"dweb:/ipfs/QmbSQxcw2ktZediTT1RQaafbxTDS3tZ9WgW4JtniiwApRu\"]},\"ds-thing/thing.sol\":{\"keccak256\":\"0x19501e76500fa0bcd894e0a27517389bd224cca56920dae785da48ed0a621945\",\"urls\":[\"bzz-raw://b6a72dd24778b0b54c56b84154ceac6713589f36a5051c0c3b91259e5b0363d5\",\"dweb:/ipfs/QmVYkChYACp4zKeKUGJtKvoqqR61AX6kAfjJTNhnvDgy9p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "ds-thing/thing.sol:DSThing",
								"label": "authority",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(DSAuthority)13"
							},
							{
								"astId": 29,
								"contract": "ds-thing/thing.sol:DSThing",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(DSAuthority)13": {
								"encoding": "inplace",
								"label": "contract DSAuthority",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ds-value/value.sol": {
				"DSValue": {
					"abi": [
						{
							"anonymous": true,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes4",
									"name": "sig",
									"type": "bytes4"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "guy",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "foo",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "bar",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "fax",
									"type": "bytes"
								}
							],
							"name": "LogNote",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "authority",
									"type": "address"
								}
							],
							"name": "LogSetAuthority",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "LogSetOwner",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "authority",
							"outputs": [
								{
									"internalType": "contract DSAuthority",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "peek",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "wut",
									"type": "bytes32"
								}
							],
							"name": "poke",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "read",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract DSAuthority",
									"name": "authority_",
									"type": "address"
								}
							],
							"name": "setAuthority",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "void",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ds-value/value.sol\":840:1443  contract DSValue is DSThing {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"ds-auth/auth.sol\":1104:1109  owner */\n  0x01\n    /* \"ds-auth/auth.sol\":1104:1122  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"ds-auth/auth.sol\":1112:1122  msg.sender */\n  caller\n    /* \"ds-auth/auth.sol\":1104:1122  owner = msg.sender */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"ds-auth/auth.sol\":1137:1160  LogSetOwner(msg.sender) */\n  mload(0x40)\n  0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94\n  swap1\n    /* \"ds-auth/auth.sol\":1104:1109  owner */\n  0x00\n  swap1\n    /* \"ds-auth/auth.sol\":1137:1160  LogSetOwner(msg.sender) */\n  log2\n    /* \"ds-value/value.sol\":840:1443  contract DSValue is DSThing {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ds-value/value.sol\":840:1443  contract DSValue is DSThing {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7a9e5e4b\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x7a9e5e4b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xac4c25b2\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xbf7e214f\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      dup1\n      0x13af4035\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1504460f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x57de26a4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x59e02dd7\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"ds-auth/auth.sol\":1173:1303  function setOwner(address owner_)... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"ds-value/value.sol\":1249:1347  function poke(bytes32 wut) public note payable auth {... */\n    tag_3:\n      tag_12\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n        /* \"ds-value/value.sol\":998:1244  function read() public view returns (bytes32) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":733:758   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":721:723   */\n      0x20\n        /* \"#utility.yul\":706:724   */\n      add\n        /* \"ds-value/value.sol\":998:1244  function read() public view returns (bytes32) {... */\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ds-value/value.sol\":908:993  function peek() public view returns (bytes32, bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n        /* \"ds-value/value.sol\":978:981  val */\n      sload(0x02)\n        /* \"ds-value/value.sol\":982:985  has */\n      sload(0x01)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"ds-value/value.sol\":908:993  function peek() public view returns (bytes32, bool) {... */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":937:962   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":1005:1019   */\n      swap1\n      iszero\n        /* \"#utility.yul\":998:1020   */\n      iszero\n        /* \"#utility.yul\":993:995   */\n      0x20\n        /* \"#utility.yul\":978:996   */\n      dup4\n      add\n        /* \"#utility.yul\":971:1021   */\n      mstore\n        /* \"#utility.yul\":910:928   */\n      add\n        /* \"ds-value/value.sol\":908:993  function peek() public view returns (bytes32, bool) {... */\n      tag_23\n        /* \"#utility.yul\":769:1027   */\n      jump\n        /* \"ds-auth/auth.sol\":1309:1476  function setAuthority(DSAuthority authority_)... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_12\n      tag_32\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n        /* \"ds-auth/auth.sol\":1040:1066  address      public  owner */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      sload(0x01)\n      tag_36\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_36:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1466:1498   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1448:1499   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1436:1438   */\n      0x20\n        /* \"#utility.yul\":1421:1439   */\n      add\n        /* \"ds-auth/auth.sol\":1040:1066  address      public  owner */\n      tag_23\n        /* \"#utility.yul\":1302:1505   */\n      jump\n        /* \"ds-value/value.sol\":1352:1441  function void() public note payable auth {  // unset the value... */\n    tag_8:\n      tag_12\n      tag_41\n      jump\t// in\n        /* \"ds-auth/auth.sol\":1004:1034  DSAuthority  public  authority */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      sload(0x00)\n      tag_36\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"ds-auth/auth.sol\":1173:1303  function setOwner(address owner_)... */\n    tag_15:\n        /* \"ds-auth/auth.sol\":1514:1547  isAuthorized(msg.sender, msg.sig) */\n      tag_48\n        /* \"ds-auth/auth.sol\":1527:1537  msg.sender */\n      caller\n        /* \"ds-auth/auth.sol\":1539:1546  msg.sig */\n      and(not(sub(shl(0xe0, 0x01), 0x01)), calldataload(0x00))\n        /* \"ds-auth/auth.sol\":1514:1526  isAuthorized */\n      tag_49\n        /* \"ds-auth/auth.sol\":1514:1547  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_48:\n        /* \"ds-auth/auth.sol\":1506:1572  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_50:\n        /* \"ds-auth/auth.sol\":1249:1254  owner */\n      0x01\n        /* \"ds-auth/auth.sol\":1249:1263  owner = owner_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"ds-auth/auth.sol\":1278:1296  LogSetOwner(owner) */\n      mload(0x40)\n      0xce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"ds-auth/auth.sol\":1173:1303  function setOwner(address owner_)... */\n      pop\n      jump\t// out\n        /* \"ds-value/value.sol\":1249:1347  function poke(bytes32 wut) public note payable auth {... */\n    tag_19:\n        /* \"ds-note/note.sol\":1152:1211  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      mload(0x40)\n        /* \"ds-note/note.sol\":1089:1090  4 */\n      0x04\n        /* \"ds-note/note.sol\":1076:1091  calldataload(4) */\n      calldataload\n      swap1\n        /* \"ds-note/note.sol\":1124:1126  36 */\n      0x24\n        /* \"ds-note/note.sol\":1111:1127  calldataload(36) */\n      calldataload\n      swap1\n      dup2\n      swap1\n        /* \"ds-note/note.sol\":1076:1091  calldataload(4) */\n      dup4\n      swap1\n        /* \"ds-note/note.sol\":1169:1179  msg.sender */\n      caller\n      swap1\n        /* \"ds-note/note.sol\":1003:1014  bytes32 foo */\n      0x00\n        /* \"ds-note/note.sol\":1160:1167  msg.sig */\n      dup1\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n      swap2\n        /* \"ds-note/note.sol\":1152:1211  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      tag_55\n      swap2\n        /* \"ds-note/note.sol\":1191:1200  msg.value */\n      callvalue\n      swap2\n        /* \"ds-note/note.sol\":1202:1210  msg.data */\n      calldatasize\n      swap1\n        /* \"ds-note/note.sol\":1152:1211  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ds-auth/auth.sol\":1514:1547  isAuthorized(msg.sender, msg.sig) */\n      tag_58\n        /* \"ds-auth/auth.sol\":1527:1537  msg.sender */\n      caller\n        /* \"ds-auth/auth.sol\":1539:1546  msg.sig */\n      and(not(sub(shl(0xe0, 0x01), 0x01)), calldataload(0x00))\n        /* \"ds-auth/auth.sol\":1514:1526  isAuthorized */\n      tag_49\n        /* \"ds-auth/auth.sol\":1514:1547  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_58:\n        /* \"ds-auth/auth.sol\":1506:1572  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_52\n      jump\t// in\n    tag_59:\n      pop\n      pop\n        /* \"ds-value/value.sol\":1311:1314  val */\n      0x02\n        /* \"ds-value/value.sol\":1311:1320  val = wut */\n      sstore\n        /* \"ds-value/value.sol\":1336:1340  true */\n      0x01\n        /* \"ds-value/value.sol\":1330:1340  has = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"ds-value/value.sol\":1249:1347  function poke(bytes32 wut) public note payable auth {... */\n      jump\t// out\n        /* \"ds-value/value.sol\":998:1244  function read() public view returns (bytes32) {... */\n    tag_22:\n        /* \"ds-value/value.sol\":978:981  val */\n      sload(0x02)\n        /* \"ds-value/value.sol\":982:985  has */\n      sload(0x01)\n        /* \"ds-value/value.sol\":1035:1042  bytes32 */\n      0x00\n      swap2\n        /* \"ds-value/value.sol\":978:981  val */\n      swap1\n      shl(0xa0, 0x01)\n        /* \"ds-value/value.sol\":982:985  has */\n      swap1\n      div\n      0xff\n      and\n      dup1\n        /* \"ds-value/value.sol\":1126:1164  require(haz, \"DSValue: invalid value\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2751:2753   */\n      0x20\n        /* \"ds-value/value.sol\":1126:1164  require(haz, \"DSValue: invalid value\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2733:2754   */\n      mstore\n        /* \"#utility.yul\":2790:2792   */\n      0x16\n        /* \"#utility.yul\":2770:2788   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2763:2793   */\n      mstore\n      shl(0x50, 0x445356616c75653a20696e76616c69642076616c7565)\n        /* \"#utility.yul\":2809:2827   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2802:2854   */\n      mstore\n        /* \"#utility.yul\":2871:2889   */\n      0x64\n      add\n        /* \"ds-value/value.sol\":1126:1164  require(haz, \"DSValue: invalid value\") */\n      tag_51\n        /* \"#utility.yul\":2549:2895   */\n      jump\n        /* \"ds-value/value.sol\":1126:1164  require(haz, \"DSValue: invalid value\") */\n    tag_64:\n      pop\n        /* \"ds-value/value.sol\":1234:1237  wut */\n      swap2\n        /* \"ds-value/value.sol\":998:1244  function read() public view returns (bytes32) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"ds-auth/auth.sol\":1309:1476  function setAuthority(DSAuthority authority_)... */\n    tag_34:\n        /* \"ds-auth/auth.sol\":1514:1547  isAuthorized(msg.sender, msg.sig) */\n      tag_69\n        /* \"ds-auth/auth.sol\":1527:1537  msg.sender */\n      caller\n        /* \"ds-auth/auth.sol\":1539:1546  msg.sig */\n      and(not(sub(shl(0xe0, 0x01), 0x01)), calldataload(0x00))\n        /* \"ds-auth/auth.sol\":1514:1526  isAuthorized */\n      tag_49\n        /* \"ds-auth/auth.sol\":1514:1547  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_69:\n        /* \"ds-auth/auth.sol\":1506:1572  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_52\n      jump\t// in\n    tag_70:\n        /* \"ds-auth/auth.sol\":1397:1406  authority */\n      0x00\n        /* \"ds-auth/auth.sol\":1397:1419  authority = authority_ */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      dup3\n      sstore\n        /* \"ds-auth/auth.sol\":1434:1469  LogSetAuthority(address(authority)) */\n      mload(0x40)\n        /* \"ds-auth/auth.sol\":1397:1419  authority = authority_ */\n      swap1\n      swap2\n        /* \"ds-auth/auth.sol\":1434:1469  LogSetAuthority(address(authority)) */\n      0x1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada4\n      swap2\n      log2\n        /* \"ds-auth/auth.sol\":1309:1476  function setAuthority(DSAuthority authority_)... */\n      pop\n      jump\t// out\n        /* \"ds-value/value.sol\":1352:1441  function void() public note payable auth {  // unset the value... */\n    tag_41:\n        /* \"ds-note/note.sol\":1152:1211  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      mload(0x40)\n        /* \"ds-note/note.sol\":1089:1090  4 */\n      0x04\n        /* \"ds-note/note.sol\":1076:1091  calldataload(4) */\n      calldataload\n      swap1\n        /* \"ds-note/note.sol\":1124:1126  36 */\n      0x24\n        /* \"ds-note/note.sol\":1111:1127  calldataload(36) */\n      calldataload\n      swap1\n      dup2\n      swap1\n        /* \"ds-note/note.sol\":1076:1091  calldataload(4) */\n      dup4\n      swap1\n        /* \"ds-note/note.sol\":1169:1179  msg.sender */\n      caller\n      swap1\n        /* \"ds-note/note.sol\":1003:1014  bytes32 foo */\n      0x00\n        /* \"ds-note/note.sol\":1160:1167  msg.sig */\n      dup1\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n      swap2\n        /* \"ds-note/note.sol\":1152:1211  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      tag_74\n      swap2\n        /* \"ds-note/note.sol\":1191:1200  msg.value */\n      callvalue\n      swap2\n        /* \"ds-note/note.sol\":1202:1210  msg.data */\n      calldatasize\n      swap1\n        /* \"ds-note/note.sol\":1152:1211  LogNote(msg.sig, msg.sender, foo, bar, msg.value, msg.data) */\n      tag_56\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"ds-auth/auth.sol\":1514:1547  isAuthorized(msg.sender, msg.sig) */\n      tag_76\n        /* \"ds-auth/auth.sol\":1527:1537  msg.sender */\n      caller\n        /* \"ds-auth/auth.sol\":1539:1546  msg.sig */\n      and(not(sub(shl(0xe0, 0x01), 0x01)), calldataload(0x00))\n        /* \"ds-auth/auth.sol\":1514:1526  isAuthorized */\n      tag_49\n        /* \"ds-auth/auth.sol\":1514:1547  isAuthorized(msg.sender, msg.sig) */\n      jump\t// in\n    tag_76:\n        /* \"ds-auth/auth.sol\":1506:1572  require(isAuthorized(msg.sender, msg.sig), \"ds-auth-unauthorized\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap1\n      tag_52\n      jump\t// in\n    tag_77:\n      pop\n      pop\n        /* \"ds-value/value.sol\":1423:1426  has */\n      0x01\n        /* \"ds-value/value.sol\":1423:1434  has = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"ds-value/value.sol\":1352:1441  function void() public note payable auth {  // unset the value... */\n      jump\t// out\n        /* \"ds-auth/auth.sol\":1596:1975  function isAuthorized(address src, bytes4 sig) internal view returns (bool) {... */\n    tag_49:\n        /* \"ds-auth/auth.sol\":1666:1670  bool */\n      0x00\n        /* \"ds-auth/auth.sol\":1701:1705  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ds-auth/auth.sol\":1686:1706  src == address(this) */\n      dup5\n      and\n      sub\n        /* \"ds-auth/auth.sol\":1682:1969  if (src == address(this)) {... */\n      tag_81\n      jumpi\n      pop\n        /* \"ds-auth/auth.sol\":1729:1733  true */\n      0x01\n        /* \"ds-auth/auth.sol\":1722:1733  return true */\n      jump(tag_86)\n        /* \"ds-auth/auth.sol\":1682:1969  if (src == address(this)) {... */\n    tag_81:\n        /* \"ds-auth/auth.sol\":1761:1766  owner */\n      sload(0x01)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ds-auth/auth.sol\":1754:1766  src == owner */\n      swap1\n      dup5\n      and\n      sub\n        /* \"ds-auth/auth.sol\":1750:1969  if (src == owner) {... */\n      tag_83\n      jumpi\n      pop\n        /* \"ds-auth/auth.sol\":1789:1793  true */\n      0x01\n        /* \"ds-auth/auth.sol\":1782:1793  return true */\n      jump(tag_86)\n        /* \"ds-auth/auth.sol\":1750:1969  if (src == owner) {... */\n    tag_83:\n        /* \"ds-auth/auth.sol\":1847:1848  0 */\n      0x00\n        /* \"ds-auth/auth.sol\":1814:1823  authority */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ds-auth/auth.sol\":1810:1969  if (authority == DSAuthority(address(0))) {... */\n      tag_85\n      jumpi\n      pop\n        /* \"ds-auth/auth.sol\":1873:1878  false */\n      0x00\n        /* \"ds-auth/auth.sol\":1866:1878  return false */\n      jump(tag_86)\n        /* \"ds-auth/auth.sol\":1810:1969  if (authority == DSAuthority(address(0))) {... */\n    tag_85:\n        /* \"ds-auth/auth.sol\":1916:1925  authority */\n      sload(0x00)\n        /* \"ds-auth/auth.sol\":1916:1958  authority.canCall(src, address(this), sig) */\n      mload(0x40)\n      shl(0xe0, 0xb7009613)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3156:3171   */\n      dup6\n      dup2\n      and\n        /* \"ds-auth/auth.sol\":1916:1958  authority.canCall(src, address(this), sig) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":3138:3172   */\n      mstore\n        /* \"ds-auth/auth.sol\":1947:1951  this */\n      address\n        /* \"#utility.yul\":3188:3206   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":3181:3224   */\n      mstore\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":3260:3293   */\n      dup6\n      and\n        /* \"#utility.yul\":3240:3258   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":3233:3294   */\n      mstore\n        /* \"ds-auth/auth.sol\":1916:1925  authority */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ds-auth/auth.sol\":1916:1933  authority.canCall */\n      0xb7009613\n      swap1\n        /* \"#utility.yul\":3073:3091   */\n      0x64\n      add\n        /* \"ds-auth/auth.sol\":1916:1958  authority.canCall(src, address(this), sig) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_90\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"ds-auth/auth.sol\":1909:1958  return authority.canCall(src, address(this), sig) */\n      swap1\n      pop\n        /* \"ds-auth/auth.sol\":1810:1969  if (authority == DSAuthority(address(0))) {... */\n    tag_86:\n        /* \"ds-auth/auth.sol\":1596:1975  function isAuthorized(address src, bytes4 sig) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_96\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":69:139   */\n    tag_96:\n        /* \"#utility.yul\":14:145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:397   */\n    tag_14:\n        /* \"#utility.yul\":209:215   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":250:259   */\n      dup3\n        /* \"#utility.yul\":241:248   */\n      dup5\n        /* \"#utility.yul\":237:260   */\n      sub\n        /* \"#utility.yul\":233:265   */\n      slt\n        /* \"#utility.yul\":230:282   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":278:279   */\n      0x00\n        /* \"#utility.yul\":275:276   */\n      dup1\n        /* \"#utility.yul\":268:280   */\n      revert\n        /* \"#utility.yul\":230:282   */\n    tag_98:\n        /* \"#utility.yul\":317:326   */\n      dup2\n        /* \"#utility.yul\":304:327   */\n      calldataload\n        /* \"#utility.yul\":336:367   */\n      tag_99\n        /* \"#utility.yul\":361:366   */\n      dup2\n        /* \"#utility.yul\":336:367   */\n      tag_93\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":386:391   */\n      swap4\n        /* \"#utility.yul\":150:397   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":402:582   */\n    tag_18:\n        /* \"#utility.yul\":461:467   */\n      0x00\n        /* \"#utility.yul\":514:516   */\n      0x20\n        /* \"#utility.yul\":502:511   */\n      dup3\n        /* \"#utility.yul\":493:500   */\n      dup5\n        /* \"#utility.yul\":489:512   */\n      sub\n        /* \"#utility.yul\":485:517   */\n      slt\n        /* \"#utility.yul\":482:534   */\n      iszero\n      tag_101\n      jumpi\n        /* \"#utility.yul\":530:531   */\n      0x00\n        /* \"#utility.yul\":527:528   */\n      dup1\n        /* \"#utility.yul\":520:532   */\n      revert\n        /* \"#utility.yul\":482:534   */\n    tag_101:\n      pop\n        /* \"#utility.yul\":553:576   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":402:582   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1736:2080   */\n    tag_52:\n        /* \"#utility.yul\":1938:1940   */\n      0x20\n        /* \"#utility.yul\":1920:1941   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1977:1979   */\n      0x14\n        /* \"#utility.yul\":1957:1975   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1950:1980   */\n      mstore\n      shl(0x62, 0x191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e9959)\n        /* \"#utility.yul\":2011:2013   */\n      0x40\n        /* \"#utility.yul\":1996:2014   */\n      dup3\n      add\n        /* \"#utility.yul\":1989:2039   */\n      mstore\n        /* \"#utility.yul\":2071:2073   */\n      0x60\n        /* \"#utility.yul\":2056:2074   */\n      add\n      swap1\n        /* \"#utility.yul\":1736:2080   */\n      jump\t// out\n        /* \"#utility.yul\":2085:2544   */\n    tag_56:\n        /* \"#utility.yul\":2270:2276   */\n      dup4\n        /* \"#utility.yul\":2259:2268   */\n      dup2\n        /* \"#utility.yul\":2252:2277   */\n      mstore\n        /* \"#utility.yul\":2313:2315   */\n      0x40\n        /* \"#utility.yul\":2308:2310   */\n      0x20\n        /* \"#utility.yul\":2297:2306   */\n      dup3\n        /* \"#utility.yul\":2293:2311   */\n      add\n        /* \"#utility.yul\":2286:2316   */\n      mstore\n        /* \"#utility.yul\":2352:2358   */\n      dup2\n        /* \"#utility.yul\":2347:2349   */\n      0x40\n        /* \"#utility.yul\":2336:2345   */\n      dup3\n        /* \"#utility.yul\":2332:2350   */\n      add\n        /* \"#utility.yul\":2325:2359   */\n      mstore\n        /* \"#utility.yul\":2409:2415   */\n      dup2\n        /* \"#utility.yul\":2401:2407   */\n      dup4\n        /* \"#utility.yul\":2396:2398   */\n      0x60\n        /* \"#utility.yul\":2385:2394   */\n      dup4\n        /* \"#utility.yul\":2381:2399   */\n      add\n        /* \"#utility.yul\":2368:2416   */\n      calldatacopy\n        /* \"#utility.yul\":2465:2466   */\n      0x00\n        /* \"#utility.yul\":2436:2458   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":2460:2462   */\n      0x60\n        /* \"#utility.yul\":2432:2463   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":2425:2467   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2528:2530   */\n      0x1f\n        /* \"#utility.yul\":2507:2522   */\n      swap1\n      swap3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2503:2532   */\n      and\n        /* \"#utility.yul\":2488:2533   */\n      add\n        /* \"#utility.yul\":2484:2538   */\n      add\n      swap3\n        /* \"#utility.yul\":2085:2544   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3305:3582   */\n    tag_92:\n        /* \"#utility.yul\":3372:3378   */\n      0x00\n        /* \"#utility.yul\":3425:3427   */\n      0x20\n        /* \"#utility.yul\":3413:3422   */\n      dup3\n        /* \"#utility.yul\":3404:3411   */\n      dup5\n        /* \"#utility.yul\":3400:3423   */\n      sub\n        /* \"#utility.yul\":3396:3428   */\n      slt\n        /* \"#utility.yul\":3393:3445   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":3441:3442   */\n      0x00\n        /* \"#utility.yul\":3438:3439   */\n      dup1\n        /* \"#utility.yul\":3431:3443   */\n      revert\n        /* \"#utility.yul\":3393:3445   */\n    tag_114:\n        /* \"#utility.yul\":3473:3482   */\n      dup2\n        /* \"#utility.yul\":3467:3483   */\n      mload\n        /* \"#utility.yul\":3526:3531   */\n      dup1\n        /* \"#utility.yul\":3519:3532   */\n      iszero\n        /* \"#utility.yul\":3512:3533   */\n      iszero\n        /* \"#utility.yul\":3505:3510   */\n      dup2\n        /* \"#utility.yul\":3502:3534   */\n      eq\n        /* \"#utility.yul\":3492:3552   */\n      tag_99\n      jumpi\n        /* \"#utility.yul\":3548:3549   */\n      0x00\n        /* \"#utility.yul\":3545:3546   */\n      dup1\n        /* \"#utility.yul\":3538:3550   */\n      revert\n\n    auxdata: 0xa2646970667358221220c3bd0dbf7346b824b4333c892d57f87f1c5078b67bb1b6eb3ed54e7ee829f1af64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_43": {
									"entryPoint": null,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600180546001600160a01b031916339081179091556040517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94905f90a26105b38061005a5f395ff3fe608060405260043610610079575f3560e01c80637a9e5e4b1161004c5780637a9e5e4b146101095780638da5cb5b14610128578063ac4c25b21461015f578063bf7e214f14610167575f80fd5b806313af40351461007d5780631504460f1461009e57806357de26a4146100b157806359e02dd7146100d8575b5f80fd5b348015610088575f80fd5b5061009c6100973660046104c2565b610185565b005b61009c6100ac3660046104e4565b610208565b3480156100bc575f80fd5b506100c5610287565b6040519081526020015b60405180910390f35b3480156100e3575f80fd5b50600254600154600160a01b900460ff16604080519283529015156020830152016100cf565b348015610114575f80fd5b5061009c6101233660046104c2565b6102e6565b348015610133575f80fd5b50600154610147906001600160a01b031681565b6040516001600160a01b0390911681526020016100cf565b61009c61035e565b348015610172575f80fd5b505f54610147906001600160a01b031681565b61019a335f356001600160e01b0319166103d4565b6101bf5760405162461bcd60e51b81526004016101b6906104fb565b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94905f90a250565b60405160043590602435908190839033905f80356001600160e01b031916916102349134913690610529565b60405180910390a4610251335f356001600160e01b0319166103d4565b61026d5760405162461bcd60e51b81526004016101b6906104fb565b50506002556001805460ff60a01b1916600160a01b179055565b6002546001545f9190600160a01b900460ff16806102e05760405162461bcd60e51b8152602060048201526016602482015275445356616c75653a20696e76616c69642076616c756560501b60448201526064016101b6565b50919050565b6102fb335f356001600160e01b0319166103d4565b6103175760405162461bcd60e51b81526004016101b6906104fb565b5f80546001600160a01b0319166001600160a01b038316908117825560405190917f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada491a250565b60405160043590602435908190839033905f80356001600160e01b0319169161038a9134913690610529565b60405180910390a46103a7335f356001600160e01b0319166103d4565b6103c35760405162461bcd60e51b81526004016101b6906104fb565b50506001805460ff60a01b19169055565b5f306001600160a01b038416036103ed575060016104a5565b6001546001600160a01b039081169084160361040b575060016104a5565b5f546001600160a01b031661042157505f6104a5565b5f5460405163b700961360e01b81526001600160a01b0385811660048301523060248301526001600160e01b0319851660448301529091169063b700961390606401602060405180830381865afa15801561047e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104a2919061055e565b90505b92915050565b6001600160a01b03811681146104bf575f80fd5b50565b5f602082840312156104d2575f80fd5b81356104dd816104ab565b9392505050565b5f602082840312156104f4575f80fd5b5035919050565b602080825260149082015273191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e995960621b604082015260600190565b83815260406020820152816040820152818360608301375f818301606090810191909152601f909201601f1916010192915050565b5f6020828403121561056e575f80fd5b815180151581146104dd575f80fdfea2646970667358221220c3bd0dbf7346b824b4333c892d57f87f1c5078b67bb1b6eb3ed54e7ee829f1af64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 SWAP1 PUSH0 SWAP1 LOG2 PUSH2 0x5B3 DUP1 PUSH2 0x5A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x79 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A9E5E4B GT PUSH2 0x4C JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0xAC4C25B2 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x1504460F EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x57DE26A4 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x59E02DD7 EQ PUSH2 0xD8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x185 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9C PUSH2 0xAC CALLDATASIZE PUSH1 0x4 PUSH2 0x4E4 JUMP JUMPDEST PUSH2 0x208 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC5 PUSH2 0x287 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0xCF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x133 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x147 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0x9C PUSH2 0x35E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x147 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x19A CALLER PUSH0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x3D4 JUMP JUMPDEST PUSH2 0x1BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6 SWAP1 PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 SWAP1 DUP4 SWAP1 CALLER SWAP1 PUSH0 DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP2 PUSH2 0x234 SWAP2 CALLVALUE SWAP2 CALLDATASIZE SWAP1 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x251 CALLER PUSH0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x3D4 JUMP JUMPDEST PUSH2 0x26D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6 SWAP1 PUSH2 0x4FB JUMP JUMPDEST POP POP PUSH1 0x2 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH0 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x2E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x445356616C75653A20696E76616C69642076616C7565 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1B6 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FB CALLER PUSH0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x3D4 JUMP JUMPDEST PUSH2 0x317 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6 SWAP1 PUSH2 0x4FB JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4 SWAP2 LOG2 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 SWAP1 DUP4 SWAP1 CALLER SWAP1 PUSH0 DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP2 PUSH2 0x38A SWAP2 CALLVALUE SWAP2 CALLDATASIZE SWAP1 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x3A7 CALLER PUSH0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x3D4 JUMP JUMPDEST PUSH2 0x3C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6 SWAP1 PUSH2 0x4FB JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SUB PUSH2 0x3ED JUMPI POP PUSH1 0x1 PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND SUB PUSH2 0x40B JUMPI POP PUSH1 0x1 PUSH2 0x4A5 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x421 JUMPI POP PUSH0 PUSH2 0x4A5 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x55E JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4DD DUP2 PUSH2 0x4AB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x191CCB585D5D1A0B5D5B985D5D1A1BDC9A5E9959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH0 DUP2 DUP4 ADD PUSH1 0x60 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x56E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4DD JUMPI PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0xBD 0xD 0xBF PUSH20 0x46B824B4333C892D57F87F1C5078B67BB1B6EB3E 0xD5 0x4E PUSH31 0xE829F1AF64736F6C6343000814003300000000000000000000000000000000 ",
							"sourceMap": "840:603:4:-:0;;;;;;;;;;;;-1:-1:-1;1104:5:0;:18;;-1:-1:-1;;;;;;1104:18:0;1112:10;1104:18;;;;;;1137:23;;;;1104:5;;1137:23;840:603:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@authority_27": {
									"entryPoint": null,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isAuthorized_143": {
									"entryPoint": 980,
									"id": 143,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@peek_540": {
									"entryPoint": null,
									"id": 540,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@poke_578": {
									"entryPoint": 520,
									"id": 578,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@read_560": {
									"entryPoint": 647,
									"id": 560,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setAuthority_79": {
									"entryPoint": 742,
									"id": 79,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setOwner_59": {
									"entryPoint": 389,
									"id": 59,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@void_590": {
									"entryPoint": 862,
									"id": 590,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 1252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_DSAuthority_$13": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bool__to_t_bytes32_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_DSAuthority_$13__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_166b1fe4059d096071443d23428666de4ceaca5dfeecf186a801a33a4cdbddd9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_71a3e0dab0bc3e15ac020c7bfa942cb48f9b705ff641c87396357a5ecf819713__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bytes_calldata_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 1321,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 1195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3584:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:5"
															},
															"nodeType": "YulIf",
															"src": "69:70:5"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:5",
														"type": ""
													}
												],
												"src": "14:131:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "220:177:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "266:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "275:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "278:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "268:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "268:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "268:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "241:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "250:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "237:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "237:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "233:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "233:32:5"
															},
															"nodeType": "YulIf",
															"src": "230:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "291:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "317:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "304:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "304:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "295:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "361:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "336:24:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:31:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "376:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "386:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "376:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "186:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "197:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "209:6:5",
														"type": ""
													}
												],
												"src": "150:247:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "472:110:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "518:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "527:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "530:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "520:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "520:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "520:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "493:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "502:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "489:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "489:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "514:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "485:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:32:5"
															},
															"nodeType": "YulIf",
															"src": "482:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "566:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "553:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "553:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "543:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "438:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "449:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "461:6:5",
														"type": ""
													}
												],
												"src": "402:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "688:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "698:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "710:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "721:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "706:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "706:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "698:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "740:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "751:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "733:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "733:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "733:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "657:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "668:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "679:4:5",
														"type": ""
													}
												],
												"src": "587:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "892:135:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "902:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "914:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "925:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "910:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "910:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "902:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "944:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "955:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "937:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "937:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "937:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "982:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "993:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "978:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "978:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "1012:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1005:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1005:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "998:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "998:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "971:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "971:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "971:50:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bool__to_t_bytes32_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "853:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "864:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "872:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "883:4:5",
														"type": ""
													}
												],
												"src": "769:258:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1120:177:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1166:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1175:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1178:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1168:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1168:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1168:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1141:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1150:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1137:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1162:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1133:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1133:32:5"
															},
															"nodeType": "YulIf",
															"src": "1130:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1191:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1217:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1204:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1204:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1195:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1261:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1236:24:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1236:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1236:31:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1276:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1286:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1276:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_DSAuthority_$13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1086:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1097:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1109:6:5",
														"type": ""
													}
												],
												"src": "1032:265:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1403:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1413:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1425:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1436:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1421:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1421:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1413:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1455:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1470:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1486:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1491:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1482:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1482:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1495:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1478:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1478:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1466:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1466:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1448:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1448:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1448:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1372:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1383:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1394:4:5",
														"type": ""
													}
												],
												"src": "1302:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1629:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1639:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1651:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1647:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1639:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1681:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1696:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1712:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1708:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1708:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1721:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1704:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1704:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1692:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1692:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1674:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_DSAuthority_$13__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1598:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1609:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1620:4:5",
														"type": ""
													}
												],
												"src": "1510:221:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1910:170:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1927:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1938:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1920:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1920:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1920:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1961:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1972:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1957:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1977:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1950:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1950:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1950:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2011:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1996:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1996:18:5"
																	},
																	{
																		"hexValue": "64732d617574682d756e617574686f72697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2016:22:5",
																		"type": "",
																		"value": "ds-auth-unauthorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1989:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1989:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1989:50:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2048:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2060:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2071:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2056:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2048:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_166b1fe4059d096071443d23428666de4ceaca5dfeecf186a801a33a4cdbddd9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1887:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1901:4:5",
														"type": ""
													}
												],
												"src": "1736:344:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2242:302:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2259:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2270:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2252:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2252:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2252:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2297:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2308:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2293:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2293:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2313:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2286:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2336:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2347:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2332:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2332:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2352:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2325:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2325:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2325:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2385:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2396:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2381:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2381:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2401:6:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2409:6:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2368:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2368:48:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2368:48:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2440:9:5"
																					},
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "2451:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2436:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2436:22:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2460:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2432:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2432:31:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2465:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2425:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2425:42:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2425:42:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2476:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2492:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value2",
																								"nodeType": "YulIdentifier",
																								"src": "2511:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2519:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2507:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2507:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2528:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2524:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2524:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2503:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2503:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2488:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2488:45:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2535:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2484:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2484:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2476:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bytes_calldata_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2195:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2206:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2214:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2222:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2233:4:5",
														"type": ""
													}
												],
												"src": "2085:459:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2723:172:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2740:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2751:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2733:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2733:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2733:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2774:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2785:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2770:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2770:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:2:5",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2763:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2763:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2763:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2813:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2824:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2809:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2809:18:5"
																	},
																	{
																		"hexValue": "445356616c75653a20696e76616c69642076616c7565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2829:24:5",
																		"type": "",
																		"value": "DSValue: invalid value"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2802:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2802:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2802:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2863:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2875:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2886:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2871:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2863:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_71a3e0dab0bc3e15ac020c7bfa942cb48f9b705ff641c87396357a5ecf819713__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2700:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2714:4:5",
														"type": ""
													}
												],
												"src": "2549:346:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3055:245:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3065:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3077:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3088:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3073:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3073:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3065:4:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3118:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3123:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3114:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3114:11:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3127:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3110:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3110:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3104:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3145:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3160:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3168:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3156:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3156:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3138:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3138:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3138:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3192:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3203:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3188:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3188:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3212:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3220:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3208:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3208:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3181:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3181:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3181:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3244:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3255:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3240:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3240:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "3264:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3276:3:5",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:10:5",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3272:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3272:20:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3260:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:33:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3233:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3233:61:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3233:61:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3008:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3019:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3027:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3035:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3046:4:5",
														"type": ""
													}
												],
												"src": "2900:400:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3383:199:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3429:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3438:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3441:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3431:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3431:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3431:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3404:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3413:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3400:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3400:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3425:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3396:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:32:5"
															},
															"nodeType": "YulIf",
															"src": "3393:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3454:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3473:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3467:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3467:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3458:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3536:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3545:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3548:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3538:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3538:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3538:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3505:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3526:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3519:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3519:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3512:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3512:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3502:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3502:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3495:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3495:40:5"
															},
															"nodeType": "YulIf",
															"src": "3492:60:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3561:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3571:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3561:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3349:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3360:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3372:6:5",
														"type": ""
													}
												],
												"src": "3305:277:5"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_bool__to_t_bytes32_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_decode_tuple_t_contract$_DSAuthority_$13(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_DSAuthority_$13__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_166b1fe4059d096071443d23428666de4ceaca5dfeecf186a801a33a4cdbddd9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"ds-auth-unauthorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_bytes_calldata_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), value2)\n        calldatacopy(add(headStart, 96), value1, value2)\n        mstore(add(add(headStart, value2), 96), 0)\n        tail := add(add(headStart, and(add(value2, 31), not(31))), 96)\n    }\n    function abi_encode_tuple_t_stringliteral_71a3e0dab0bc3e15ac020c7bfa942cb48f9b705ff641c87396357a5ecf819713__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"DSValue: invalid value\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_bytes4__to_t_address_t_address_t_bytes4__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610079575f3560e01c80637a9e5e4b1161004c5780637a9e5e4b146101095780638da5cb5b14610128578063ac4c25b21461015f578063bf7e214f14610167575f80fd5b806313af40351461007d5780631504460f1461009e57806357de26a4146100b157806359e02dd7146100d8575b5f80fd5b348015610088575f80fd5b5061009c6100973660046104c2565b610185565b005b61009c6100ac3660046104e4565b610208565b3480156100bc575f80fd5b506100c5610287565b6040519081526020015b60405180910390f35b3480156100e3575f80fd5b50600254600154600160a01b900460ff16604080519283529015156020830152016100cf565b348015610114575f80fd5b5061009c6101233660046104c2565b6102e6565b348015610133575f80fd5b50600154610147906001600160a01b031681565b6040516001600160a01b0390911681526020016100cf565b61009c61035e565b348015610172575f80fd5b505f54610147906001600160a01b031681565b61019a335f356001600160e01b0319166103d4565b6101bf5760405162461bcd60e51b81526004016101b6906104fb565b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040517fce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94905f90a250565b60405160043590602435908190839033905f80356001600160e01b031916916102349134913690610529565b60405180910390a4610251335f356001600160e01b0319166103d4565b61026d5760405162461bcd60e51b81526004016101b6906104fb565b50506002556001805460ff60a01b1916600160a01b179055565b6002546001545f9190600160a01b900460ff16806102e05760405162461bcd60e51b8152602060048201526016602482015275445356616c75653a20696e76616c69642076616c756560501b60448201526064016101b6565b50919050565b6102fb335f356001600160e01b0319166103d4565b6103175760405162461bcd60e51b81526004016101b6906104fb565b5f80546001600160a01b0319166001600160a01b038316908117825560405190917f1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada491a250565b60405160043590602435908190839033905f80356001600160e01b0319169161038a9134913690610529565b60405180910390a46103a7335f356001600160e01b0319166103d4565b6103c35760405162461bcd60e51b81526004016101b6906104fb565b50506001805460ff60a01b19169055565b5f306001600160a01b038416036103ed575060016104a5565b6001546001600160a01b039081169084160361040b575060016104a5565b5f546001600160a01b031661042157505f6104a5565b5f5460405163b700961360e01b81526001600160a01b0385811660048301523060248301526001600160e01b0319851660448301529091169063b700961390606401602060405180830381865afa15801561047e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104a2919061055e565b90505b92915050565b6001600160a01b03811681146104bf575f80fd5b50565b5f602082840312156104d2575f80fd5b81356104dd816104ab565b9392505050565b5f602082840312156104f4575f80fd5b5035919050565b602080825260149082015273191ccb585d5d1a0b5d5b985d5d1a1bdc9a5e995960621b604082015260600190565b83815260406020820152816040820152818360608301375f818301606090810191909152601f909201601f1916010192915050565b5f6020828403121561056e575f80fd5b815180151581146104dd575f80fdfea2646970667358221220c3bd0dbf7346b824b4333c892d57f87f1c5078b67bb1b6eb3ed54e7ee829f1af64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x79 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A9E5E4B GT PUSH2 0x4C JUMPI DUP1 PUSH4 0x7A9E5E4B EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0xAC4C25B2 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xBF7E214F EQ PUSH2 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x1504460F EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x57DE26A4 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x59E02DD7 EQ PUSH2 0xD8 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x88 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x185 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9C PUSH2 0xAC CALLDATASIZE PUSH1 0x4 PUSH2 0x4E4 JUMP JUMPDEST PUSH2 0x208 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xBC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xC5 PUSH2 0x287 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0xCF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x9C PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x2E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x133 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x147 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCF JUMP JUMPDEST PUSH2 0x9C PUSH2 0x35E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x147 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x19A CALLER PUSH0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x3D4 JUMP JUMPDEST PUSH2 0x1BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6 SWAP1 PUSH2 0x4FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94 SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 SWAP1 DUP4 SWAP1 CALLER SWAP1 PUSH0 DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP2 PUSH2 0x234 SWAP2 CALLVALUE SWAP2 CALLDATASIZE SWAP1 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x251 CALLER PUSH0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x3D4 JUMP JUMPDEST PUSH2 0x26D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6 SWAP1 PUSH2 0x4FB JUMP JUMPDEST POP POP PUSH1 0x2 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH0 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x2E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x445356616C75653A20696E76616C69642076616C7565 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1B6 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FB CALLER PUSH0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x3D4 JUMP JUMPDEST PUSH2 0x317 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6 SWAP1 PUSH2 0x4FB JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4 SWAP2 LOG2 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 SWAP1 DUP4 SWAP1 CALLER SWAP1 PUSH0 DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP2 PUSH2 0x38A SWAP2 CALLVALUE SWAP2 CALLDATASIZE SWAP1 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x3A7 CALLER PUSH0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x3D4 JUMP JUMPDEST PUSH2 0x3C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B6 SWAP1 PUSH2 0x4FB JUMP JUMPDEST POP POP PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SUB PUSH2 0x3ED JUMPI POP PUSH1 0x1 PUSH2 0x4A5 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP5 AND SUB PUSH2 0x40B JUMPI POP PUSH1 0x1 PUSH2 0x4A5 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x421 JUMPI POP PUSH0 PUSH2 0x4A5 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xB7009613 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xB7009613 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A2 SWAP2 SWAP1 PUSH2 0x55E JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4BF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4DD DUP2 PUSH2 0x4AB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x191CCB585D5D1A0B5D5B985D5D1A1BDC9A5E9959 PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH0 DUP2 DUP4 ADD PUSH1 0x60 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x56E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x4DD JUMPI PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0xBD 0xD 0xBF PUSH20 0x46B824B4333C892D57F87F1C5078B67BB1B6EB3E 0xD5 0x4E PUSH31 0xE829F1AF64736F6C6343000814003300000000000000000000000000000000 ",
							"sourceMap": "840:603:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1173:130:0;;;;;;;;;;-1:-1:-1;1173:130:0;;;;;:::i;:::-;;:::i;:::-;;1249:98:4;;;;;;:::i;:::-;;:::i;998:246::-;;;;;;;;;;;;;:::i;:::-;;;733:25:5;;;721:2;706:18;998:246:4;;;;;;;;908:85;;;;;;;;;;-1:-1:-1;978:3:4;;982;;-1:-1:-1;;;982:3:4;;;;908:85;;;937:25:5;;;1005:14;;998:22;993:2;978:18;;971:50;910:18;908:85:4;769:258:5;1309:167:0;;;;;;;;;;-1:-1:-1;1309:167:0;;;;;:::i;:::-;;:::i;1040:26::-;;;;;;;;;;-1:-1:-1;1040:26:0;;;;-1:-1:-1;;;;;1040:26:0;;;;;;-1:-1:-1;;;;;1466:32:5;;;1448:51;;1436:2;1421:18;1040:26:0;1302:203:5;1352:89:4;;;:::i;1004:30:0:-;;;;;;;;;;-1:-1:-1;1004:30:0;;;;-1:-1:-1;;;;;1004:30:0;;;1173:130;1514:33;1527:10;1539:7;;-1:-1:-1;;;;;;1539:7:0;1514:12;:33::i;:::-;1506:66;;;;-1:-1:-1;;;1506:66:0;;;;;;;:::i;:::-;;;;;;;;;1249:5:::1;:14:::0;;-1:-1:-1;;;;;;1249:14:0::1;-1:-1:-1::0;;;;;1249:14:0;::::1;::::0;;::::1;::::0;;;1278:18:::1;::::0;::::1;::::0;-1:-1:-1;;1278:18:0::1;1173:130:::0;:::o;1249:98:4:-;1152:59:2;;1089:1;1076:15;;1124:2;1111:16;;;;1076:15;;1169:10;;1003:11;1160:7;;-1:-1:-1;;;;;;1160:7:2;;1152:59;;1191:9;;1202:8;;1152:59;:::i;:::-;;;;;;;;1514:33:0::1;1527:10;1539:7;;-1:-1:-1::0;;;;;;1539:7:0::1;1514:12;:33::i;:::-;1506:66;;;;-1:-1:-1::0;;;1506:66:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;1311:3:4::2;:9:::0;1336:4:::2;1330:10:::0;;-1:-1:-1;;;;1330:10:4::2;-1:-1:-1::0;;;1330:10:4::2;::::0;;1249:98::o;998:246::-;978:3;;982;;1035:7;;978:3;-1:-1:-1;;;982:3:4;;;;;1126:38;;;;-1:-1:-1;;;1126:38:4;;2751:2:5;1126:38:4;;;2733:21:5;2790:2;2770:18;;;2763:30;-1:-1:-1;;;2809:18:5;;;2802:52;2871:18;;1126:38:4;2549:346:5;1126:38:4;-1:-1:-1;1234:3:4;998:246;-1:-1:-1;998:246:4:o;1309:167:0:-;1514:33;1527:10;1539:7;;-1:-1:-1;;;;;;1539:7:0;1514:12;:33::i;:::-;1506:66;;;;-1:-1:-1;;;1506:66:0;;;;;;;:::i;:::-;1397:9:::1;:22:::0;;-1:-1:-1;;;;;;1397:22:0::1;-1:-1:-1::0;;;;;1397:22:0;::::1;::::0;;::::1;::::0;;1434:35:::1;::::0;1397:22;;1434:35:::1;::::0;::::1;1309:167:::0;:::o;1352:89:4:-;1152:59:2;;1089:1;1076:15;;1124:2;1111:16;;;;1076:15;;1169:10;;1003:11;1160:7;;-1:-1:-1;;;;;;1160:7:2;;1152:59;;1191:9;;1202:8;;1152:59;:::i;:::-;;;;;;;;1514:33:0::1;1527:10;1539:7;;-1:-1:-1::0;;;;;;1539:7:0::1;1514:12;:33::i;:::-;1506:66;;;;-1:-1:-1::0;;;1506:66:0::1;;;;;;;:::i;:::-;-1:-1:-1::0;;1423:3:4::2;:11:::0;;-1:-1:-1;;;;1423:11:4::2;::::0;;1352:89::o;1596:379:0:-;1666:4;1701;-1:-1:-1;;;;;1686:20:0;;;1682:287;;-1:-1:-1;1729:4:0;1722:11;;1682:287;1761:5;;-1:-1:-1;;;;;1761:5:0;;;1754:12;;;;1750:219;;-1:-1:-1;1789:4:0;1782:11;;1750:219;1847:1;1814:9;-1:-1:-1;;;;;1814:9:0;1810:159;;-1:-1:-1;1873:5:0;1866:12;;1810:159;1916:9;;:42;;-1:-1:-1;;;1916:42:0;;-1:-1:-1;;;;;3156:15:5;;;1916:42:0;;;3138:34:5;1947:4:0;3188:18:5;;;3181:43;-1:-1:-1;;;;;;3260:33:5;;3240:18;;;3233:61;1916:9:0;;;;:17;;3073:18:5;;1916:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1909:49;;1810:159;1596:379;;;;:::o;14:131:5:-;-1:-1:-1;;;;;89:31:5;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:247::-;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:5:o;402:180::-;461:6;514:2;502:9;493:7;489:23;485:32;482:52;;;530:1;527;520:12;482:52;-1:-1:-1;553:23:5;;402:180;-1:-1:-1;402:180:5:o;1736:344::-;1938:2;1920:21;;;1977:2;1957:18;;;1950:30;-1:-1:-1;;;2011:2:5;1996:18;;1989:50;2071:2;2056:18;;1736:344::o;2085:459::-;2270:6;2259:9;2252:25;2313:2;2308;2297:9;2293:18;2286:30;2352:6;2347:2;2336:9;2332:18;2325:34;2409:6;2401;2396:2;2385:9;2381:18;2368:48;2465:1;2436:22;;;2460:2;2432:31;;;2425:42;;;;2528:2;2507:15;;;-1:-1:-1;;2503:29:5;2488:45;2484:54;;2085:459;-1:-1:-1;;2085:459:5:o;3305:277::-;3372:6;3425:2;3413:9;3404:7;3400:23;3396:32;3393:52;;;3441:1;3438;3431:12;3393:52;3473:9;3467:16;3526:5;3519:13;3512:21;3505:5;3502:32;3492:60;;3548:1;3545;3538:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "291800",
								"executionCost": "25715",
								"totalCost": "317515"
							},
							"external": {
								"authority()": "2401",
								"owner()": "2358",
								"peek()": "4496",
								"poke(bytes32)": "infinite",
								"read()": "4555",
								"setAuthority(address)": "infinite",
								"setOwner(address)": "infinite",
								"void()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 840,
									"end": 1443,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 840,
									"end": 1443,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 840,
									"end": 1443,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 840,
									"end": 1443,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 840,
									"end": 1443,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 840,
									"end": 1443,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 840,
									"end": 1443,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 840,
									"end": 1443,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 840,
									"end": 1443,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 840,
									"end": 1443,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 840,
									"end": 1443,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 840,
									"end": 1443,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 840,
									"end": 1443,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1104,
									"end": 1109,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1112,
									"end": 1122,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1122,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1160,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1137,
									"end": 1160,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1160,
									"name": "PUSH",
									"source": 0,
									"value": "CE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94"
								},
								{
									"begin": 1137,
									"end": 1160,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1104,
									"end": 1109,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1104,
									"end": 1109,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1137,
									"end": 1160,
									"name": "LOG2",
									"source": 0
								},
								{
									"begin": 840,
									"end": 1443,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 840,
									"end": 1443,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 840,
									"end": 1443,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 840,
									"end": 1443,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 840,
									"end": 1443,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 840,
									"end": 1443,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 840,
									"end": 1443,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c3bd0dbf7346b824b4333c892d57f87f1c5078b67bb1b6eb3ed54e7ee829f1af64736f6c63430008140033",
									".code": [
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH",
											"source": 4,
											"value": "7A9E5E4B"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH",
											"source": 4,
											"value": "7A9E5E4B"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH",
											"source": 4,
											"value": "AC4C25B2"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH",
											"source": 4,
											"value": "BF7E214F"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH",
											"source": 4,
											"value": "13AF4035"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH",
											"source": 4,
											"value": "1504460F"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH",
											"source": 4,
											"value": "57DE26A4"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH",
											"source": 4,
											"value": "59E02DD7"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 840,
											"end": 1443,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1173,
											"end": 1303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1173,
											"end": 1303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1249,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1249,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1249,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1249,
											"end": 1347,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1249,
											"end": 1347,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1249,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1249,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1249,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1249,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1249,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1249,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 998,
											"end": 1244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 733,
											"end": 758,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 733,
											"end": 758,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 733,
											"end": 758,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 721,
											"end": 723,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 724,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 908,
											"end": 993,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 908,
											"end": 993,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 908,
											"end": 993,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 908,
											"end": 993,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 908,
											"end": 993,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 908,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 908,
											"end": 993,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 908,
											"end": 993,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 993,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 908,
											"end": 993,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 908,
											"end": 993,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 908,
											"end": 993,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 978,
											"end": 981,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 978,
											"end": 981,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 982,
											"end": 985,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 982,
											"end": 985,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 982,
											"end": 985,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 982,
											"end": 985,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 982,
											"end": 985,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 982,
											"end": 985,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 908,
											"end": 993,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 908,
											"end": 993,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 908,
											"end": 993,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 937,
											"end": 962,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 937,
											"end": 962,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 937,
											"end": 962,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1005,
											"end": 1019,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1005,
											"end": 1019,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 998,
											"end": 1020,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 993,
											"end": 995,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 996,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 978,
											"end": 996,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 971,
											"end": 1021,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 910,
											"end": 928,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 908,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 769,
											"end": 1027,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1309,
											"end": 1476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1309,
											"end": 1476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1466,
											"end": 1498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1466,
											"end": 1498,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1466,
											"end": 1498,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1499,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1499,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1436,
											"end": 1438,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1421,
											"end": 1439,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1040,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1302,
											"end": 1505,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1352,
											"end": 1441,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1352,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1352,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1352,
											"end": 1441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1034,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1527,
											"end": 1537,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1514,
											"end": 1547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1547,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1514,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1506,
											"end": 1572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1254,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1249,
											"end": 1263,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1263,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1278,
											"end": 1296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1278,
											"end": 1296,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "CE241D7CA1F669FEE44B6FC00B8EBA2DF3BB514EED0F6F668F8F89096E81ED94"
										},
										{
											"begin": 1278,
											"end": 1296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1278,
											"end": 1296,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1249,
											"end": 1347,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1249,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1090,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1076,
											"end": 1091,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1126,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1111,
											"end": 1127,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1111,
											"end": 1127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1111,
											"end": 1127,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1111,
											"end": 1127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1091,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1179,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1160,
											"end": 1167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1167,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1160,
											"end": 1167,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1167,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1210,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1152,
											"end": 1211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1527,
											"end": 1537,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1546,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1539,
											"end": 1546,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1526,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1514,
											"end": 1547,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1514,
											"end": 1547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1506,
											"end": 1572,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1311,
											"end": 1314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1336,
											"end": 1340,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1330,
											"end": 1340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 1340,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1330,
											"end": 1340,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1330,
											"end": 1340,
											"modifierDepth": 2,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 1340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 1340,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1249,
											"end": 1347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 978,
											"end": 981,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 978,
											"end": 981,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 982,
											"end": 985,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 982,
											"end": 985,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1035,
											"end": 1042,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1042,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 978,
											"end": 981,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 982,
											"end": 985,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 982,
											"end": 985,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 982,
											"end": 985,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 982,
											"end": 985,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 982,
											"end": 985,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1126,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1126,
											"end": 1164,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1126,
											"end": 1164,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1126,
											"end": 1164,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1126,
											"end": 1164,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1126,
											"end": 1164,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2751,
											"end": 2753,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1126,
											"end": 1164,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1126,
											"end": 1164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1126,
											"end": 1164,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2733,
											"end": 2754,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2790,
											"end": 2792,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2770,
											"end": 2788,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2770,
											"end": 2788,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2770,
											"end": 2788,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2763,
											"end": 2793,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "445356616C75653A20696E76616C69642076616C7565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2809,
											"end": 2827,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2809,
											"end": 2827,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2827,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2854,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2889,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2871,
											"end": 2889,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2549,
											"end": 2895,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1164,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1126,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1234,
											"end": 1237,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 998,
											"end": 1244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1527,
											"end": 1537,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1539,
											"end": 1546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1514,
											"end": 1547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1547,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1514,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1506,
											"end": 1572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1506,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1397,
											"end": 1419,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1ABEBEA81BFA2637F28358C371278FB15EDE7EA8DD28D2E03B112FF6D936ADA4"
										},
										{
											"begin": 1434,
											"end": 1469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1469,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1309,
											"end": 1476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1441,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1352,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1090,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1076,
											"end": 1091,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1126,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1111,
											"end": 1127,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1111,
											"end": 1127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1111,
											"end": 1127,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1111,
											"end": 1127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1091,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1076,
											"end": 1091,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1179,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1179,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1003,
											"end": 1014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1160,
											"end": 1167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1167,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1160,
											"end": 1167,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1160,
											"end": 1167,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1210,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 1210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1152,
											"end": 1211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1211,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1527,
											"end": 1537,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1539,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1539,
											"end": 1546,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1539,
											"end": 1546,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1526,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1514,
											"end": 1547,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1514,
											"end": 1547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1514,
											"end": 1547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1506,
											"end": 1572,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1506,
											"end": 1572,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1423,
											"end": 1426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1423,
											"end": 1434,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1423,
											"end": 1434,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1423,
											"end": 1434,
											"modifierDepth": 2,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1423,
											"end": 1434,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1423,
											"end": 1434,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1352,
											"end": 1441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1596,
											"end": 1975,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1596,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1705,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1686,
											"end": 1706,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1682,
											"end": 1969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1722,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1722,
											"end": 1733,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1682,
											"end": 1969,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1682,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1761,
											"end": 1766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1766,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1766,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1750,
											"end": 1969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1789,
											"end": 1793,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1782,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1782,
											"end": 1793,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1969,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1750,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1814,
											"end": 1823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1810,
											"end": 1969,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1873,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1969,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1810,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B7009613"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3156,
											"end": 3171,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3156,
											"end": 3171,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3156,
											"end": 3171,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3172,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 1951,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3188,
											"end": 3206,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3188,
											"end": 3206,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3206,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3181,
											"end": 3224,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3260,
											"end": 3293,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3260,
											"end": 3293,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3240,
											"end": 3258,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3240,
											"end": 3258,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3240,
											"end": 3258,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3294,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1933,
											"name": "PUSH",
											"source": 0,
											"value": "B7009613"
										},
										{
											"begin": 1916,
											"end": 1933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3091,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3073,
											"end": 3091,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1916,
											"end": 1958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1916,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1909,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1909,
											"end": 1958,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1810,
											"end": 1969,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1810,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1975,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1975,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 69,
											"end": 139,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14,
											"end": 145,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 150,
											"end": 397,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 150,
											"end": 397,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 209,
											"end": 215,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 259,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 241,
											"end": 248,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 237,
											"end": 260,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 233,
											"end": 265,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 230,
											"end": 282,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 230,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 278,
											"end": 279,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 276,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 268,
											"end": 280,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 230,
											"end": 282,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 317,
											"end": 326,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 304,
											"end": 327,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 361,
											"end": 366,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 336,
											"end": 367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 336,
											"end": 367,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 336,
											"end": 367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 386,
											"end": 391,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 150,
											"end": 397,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 150,
											"end": 397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 402,
											"end": 582,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 402,
											"end": 582,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 461,
											"end": 467,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 516,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 511,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 493,
											"end": 500,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 489,
											"end": 512,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 485,
											"end": 517,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 482,
											"end": 534,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 482,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 482,
											"end": 534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 530,
											"end": 531,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 528,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 520,
											"end": 532,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 482,
											"end": 534,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 482,
											"end": 534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 553,
											"end": 576,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 553,
											"end": 576,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 402,
											"end": 582,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 402,
											"end": 582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 2080,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1736,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1940,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1920,
											"end": 1941,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1941,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1941,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 1979,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1957,
											"end": 1975,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1957,
											"end": 1975,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1957,
											"end": 1975,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1980,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191CCB585D5D1A0B5D5B985D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2011,
											"end": 2013,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1996,
											"end": 2014,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 2014,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1989,
											"end": 2039,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2071,
											"end": 2073,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2056,
											"end": 2074,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 2080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2085,
											"end": 2544,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2085,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2270,
											"end": 2276,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2268,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2313,
											"end": 2315,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2310,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2306,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2311,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2286,
											"end": 2316,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2352,
											"end": 2358,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2347,
											"end": 2349,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2336,
											"end": 2345,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2325,
											"end": 2359,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2409,
											"end": 2415,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2401,
											"end": 2407,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2396,
											"end": 2398,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2385,
											"end": 2394,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 2399,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2416,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 2465,
											"end": 2466,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2436,
											"end": 2458,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2458,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2458,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2462,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2432,
											"end": 2463,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2463,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2432,
											"end": 2463,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2467,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2467,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2467,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2530,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2507,
											"end": 2522,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2522,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2507,
											"end": 2522,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2503,
											"end": 2532,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2533,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2484,
											"end": 2538,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2484,
											"end": 2538,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2085,
											"end": 2544,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2085,
											"end": 2544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3582,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3305,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3427,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3413,
											"end": 3422,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3404,
											"end": 3411,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3423,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3428,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3393,
											"end": 3445,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3393,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3393,
											"end": 3445,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3439,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3431,
											"end": 3443,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3393,
											"end": 3445,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3393,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3473,
											"end": 3482,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3467,
											"end": 3483,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3526,
											"end": 3531,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3519,
											"end": 3532,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3512,
											"end": 3533,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3505,
											"end": 3510,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3502,
											"end": 3534,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3492,
											"end": 3552,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3548,
											"end": 3549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3545,
											"end": 3546,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3550,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"ds-auth/auth.sol",
								"ds-math/math.sol",
								"ds-note/note.sol",
								"ds-thing/thing.sol",
								"ds-value/value.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"authority()": "bf7e214f",
							"owner()": "8da5cb5b",
							"peek()": "59e02dd7",
							"poke(bytes32)": "1504460f",
							"read()": "57de26a4",
							"setAuthority(address)": "7a9e5e4b",
							"setOwner(address)": "13af4035",
							"void()": "ac4c25b2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract DSAuthority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"peek\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"wut\",\"type\":\"bytes32\"}],\"name\":\"poke\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"read\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract DSAuthority\",\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"void\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ds-value/value.sol\":\"DSValue\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ds-auth/auth.sol\":{\"keccak256\":\"0x9dd128620ddc1850d4af0a98738cc3d9a7e7797f5862e9eaed0b77659d5e8303\",\"license\":\"GNU-3\",\"urls\":[\"bzz-raw://22b41f32e304e97a48ecdc1e85962ebbae293c48558f43720d5018394aa7db5c\",\"dweb:/ipfs/QmPvHxR2SiKCv7a2DzC8Tg44TBdPXtCXmdRnDxGfXvy6qE\"]},\"ds-math/math.sol\":{\"keccak256\":\"0x8be286cf779d90081f362ad05487073efd6f11e850dfaebb7841493733116463\",\"urls\":[\"bzz-raw://6b392a407a80f01dd57046a0f32d0625f4d60060eb54a1af50b9b26eecf47d51\",\"dweb:/ipfs/QmcPNTHDNcsAaaBwZeXr2YiEGbKk2pR1TT56qK1x7ERXKu\"]},\"ds-note/note.sol\":{\"keccak256\":\"0xb53e3f45f36bd04bf3b98efd874162bae0303e29b1c8cbdd331f48514684496b\",\"urls\":[\"bzz-raw://41a607fb6beaa3248e7fbebef435702dfa22efed6312eab76f15c4a3ca8661f2\",\"dweb:/ipfs/QmbSQxcw2ktZediTT1RQaafbxTDS3tZ9WgW4JtniiwApRu\"]},\"ds-thing/thing.sol\":{\"keccak256\":\"0x19501e76500fa0bcd894e0a27517389bd224cca56920dae785da48ed0a621945\",\"urls\":[\"bzz-raw://b6a72dd24778b0b54c56b84154ceac6713589f36a5051c0c3b91259e5b0363d5\",\"dweb:/ipfs/QmVYkChYACp4zKeKUGJtKvoqqR61AX6kAfjJTNhnvDgy9p\"]},\"ds-value/value.sol\":{\"keccak256\":\"0x3d2273c95d0b4a948b0c4ff25ac0792d2381a67a3eb1c961d35556146d8d3e7f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a6c740cc224a7934be2cc47a72e22d52595e3bb5a7a24210c782535a7a97cfc3\",\"dweb:/ipfs/QmckwbtBaztza1HtZnQmWpN71nbaeZXphUA7pkaGFuvTGa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "ds-value/value.sol:DSValue",
								"label": "authority",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(DSAuthority)13"
							},
							{
								"astId": 29,
								"contract": "ds-value/value.sol:DSValue",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 526,
								"contract": "ds-value/value.sol:DSValue",
								"label": "has",
								"offset": 20,
								"slot": "1",
								"type": "t_bool"
							},
							{
								"astId": 528,
								"contract": "ds-value/value.sol:DSValue",
								"label": "val",
								"offset": 0,
								"slot": "2",
								"type": "t_bytes32"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(DSAuthority)13": {
								"encoding": "inplace",
								"label": "contract DSAuthority",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> ds-math/math.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "ds-math/math.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> ds-note/note.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "ds-note/note.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> ds-thing/thing.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "ds-thing/thing.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> ds-auth/auth.sol:32:5:\n   |\n32 |     constructor() public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1167,
					"file": "ds-auth/auth.sol",
					"start": 1073
				},
				"type": "Warning"
			}
		],
		"sources": {
			"ds-auth/auth.sol": {
				"ast": {
					"absolutePath": "ds-auth/auth.sol",
					"exportedSymbols": {
						"DSAuth": [
							144
						],
						"DSAuthEvents": [
							22
						],
						"DSAuthority": [
							13
						]
					},
					"id": 145,
					"license": "GNU-3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "677:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DSAuthority",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 13,
							"linearizedBaseContracts": [
								13
							],
							"name": "DSAuthority",
							"nameLocation": "713:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b7009613",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "canCall",
									"nameLocation": "740:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "src",
												"nameLocation": "765:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "757:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "757:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "dst",
												"nameLocation": "778:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "770:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "790:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "783:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 6,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "783:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:52:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "823:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "823:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:6:0"
									},
									"scope": 13,
									"src": "731:98:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 145,
							"src": "703:128:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DSAuthEvents",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "DSAuthEvents",
							"nameLocation": "842:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "1abebea81bfa2637f28358c371278fb15ede7ea8dd28d2e03b112ff6d936ada4",
									"id": 17,
									"name": "LogSetAuthority",
									"nameLocation": "867:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"indexed": true,
												"mutability": "mutable",
												"name": "authority",
												"nameLocation": "900:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "884:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:27:0"
									},
									"src": "861:50:0"
								},
								{
									"anonymous": false,
									"eventSelector": "ce241d7ca1f669fee44b6fc00b8eba2df3bb514eed0f6f668f8f89096e81ed94",
									"id": 21,
									"name": "LogSetOwner",
									"nameLocation": "922:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "955:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "939:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:23:0"
									},
									"src": "916:46:0"
								}
							],
							"scope": 145,
							"src": "833:131:0",
							"usedErrors": [],
							"usedEvents": [
								17,
								21
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 23,
										"name": "DSAuthEvents",
										"nameLocations": [
											"985:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 22,
										"src": "985:12:0"
									},
									"id": 24,
									"nodeType": "InheritanceSpecifier",
									"src": "985:12:0"
								}
							],
							"canonicalName": "DSAuth",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 144,
							"linearizedBaseContracts": [
								144,
								22
							],
							"name": "DSAuth",
							"nameLocation": "975:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "bf7e214f",
									"id": 27,
									"mutability": "mutable",
									"name": "authority",
									"nameLocation": "1025:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1004:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_DSAuthority_$13",
										"typeString": "contract DSAuthority"
									},
									"typeName": {
										"id": 26,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 25,
											"name": "DSAuthority",
											"nameLocations": [
												"1004:11:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 13,
											"src": "1004:11:0"
										},
										"referencedDeclaration": 13,
										"src": "1004:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_DSAuthority_$13",
											"typeString": "contract DSAuthority"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 29,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "1061:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 144,
									"src": "1040:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 28,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1040:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "1094:73:0",
										"statements": [
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 32,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1104:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 33,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1112:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1116:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1112:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1104:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "1104:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 38,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1149:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1153:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1149:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 37,
														"name": "LogSetOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1137:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1137:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "EmitStatement",
												"src": "1132:28:0"
											}
										]
									},
									"id": 43,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1084:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1094:0:0"
									},
									"scope": 144,
									"src": "1073:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "1239:64:0",
										"statements": [
											{
												"expression": {
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 50,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1249:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 51,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "1257:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1249:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "1249:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 55,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1290:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 54,
														"name": "LogSetOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1278:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1278:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 57,
												"nodeType": "EmitStatement",
												"src": "1273:23:0"
											}
										]
									},
									"functionSelector": "13af4035",
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 48,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 47,
												"name": "auth",
												"nameLocations": [
													"1230:4:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 93,
												"src": "1230:4:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1230:4:0"
										}
									],
									"name": "setOwner",
									"nameLocation": "1182:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "1199:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1191:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1190:16:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1239:0:0"
									},
									"scope": 144,
									"src": "1173:130:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "1387:89:0",
										"statements": [
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 67,
														"name": "authority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1397:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_DSAuthority_$13",
															"typeString": "contract DSAuthority"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 68,
														"name": "authority_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "1409:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_DSAuthority_$13",
															"typeString": "contract DSAuthority"
														}
													},
													"src": "1397:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_DSAuthority_$13",
														"typeString": "contract DSAuthority"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1397:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 74,
																	"name": "authority",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 27,
																	"src": "1458:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DSAuthority_$13",
																		"typeString": "contract DSAuthority"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DSAuthority_$13",
																		"typeString": "contract DSAuthority"
																	}
																],
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1450:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 72,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1450:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1450:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 71,
														"name": "LogSetAuthority",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1434:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1434:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "EmitStatement",
												"src": "1429:40:0"
											}
										]
									},
									"functionSelector": "7a9e5e4b",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 65,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 64,
												"name": "auth",
												"nameLocations": [
													"1378:4:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 93,
												"src": "1378:4:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1378:4:0"
										}
									],
									"name": "setAuthority",
									"nameLocation": "1318:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "authority_",
												"nameLocation": "1343:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "1331:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_DSAuthority_$13",
													"typeString": "contract DSAuthority"
												},
												"typeName": {
													"id": 61,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 60,
														"name": "DSAuthority",
														"nameLocations": [
															"1331:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 13,
														"src": "1331:11:0"
													},
													"referencedDeclaration": 13,
													"src": "1331:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_DSAuthority_$13",
														"typeString": "contract DSAuthority"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1330:24:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1387:0:0"
									},
									"scope": 144,
									"src": "1309:167:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1496:94:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 83,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1527:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 84,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1531:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1527:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 85,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1539:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 86,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1543:3:0",
																	"memberName": "sig",
																	"nodeType": "MemberAccess",
																	"src": "1539:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"id": 82,
																"name": "isAuthorized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "1514:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
																	"typeString": "function (address,bytes4) view returns (bool)"
																}
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1514:33:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "64732d617574682d756e617574686f72697a6564",
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1549:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_166b1fe4059d096071443d23428666de4ceaca5dfeecf186a801a33a4cdbddd9",
																"typeString": "literal_string \"ds-auth-unauthorized\""
															},
															"value": "ds-auth-unauthorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_166b1fe4059d096071443d23428666de4ceaca5dfeecf186a801a33a4cdbddd9",
																"typeString": "literal_string \"ds-auth-unauthorized\""
															}
														],
														"id": 81,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1506:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1506:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "1506:66:0"
											},
											{
												"id": 91,
												"nodeType": "PlaceholderStatement",
												"src": "1582:1:0"
											}
										]
									},
									"id": 93,
									"name": "auth",
									"nameLocation": "1491:4:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1496:0:0"
									},
									"src": "1482:108:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "1672:303:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 102,
														"name": "src",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1686:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 105,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1701:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_DSAuth_$144",
																	"typeString": "contract DSAuth"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_DSAuth_$144",
																	"typeString": "contract DSAuth"
																}
															],
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1693:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 103,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1693:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1693:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1686:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 111,
															"name": "src",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "1754:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 112,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1761:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1754:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_contract$_DSAuthority_$13",
																"typeString": "contract DSAuthority"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 117,
																"name": "authority",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "1814:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_DSAuthority_$13",
																	"typeString": "contract DSAuthority"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 121,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1847:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1839:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 119,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1839:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1839:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 118,
																	"name": "DSAuthority",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1827:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_DSAuthority_$13_$",
																		"typeString": "type(contract DSAuthority)"
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1827:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_DSAuthority_$13",
																	"typeString": "contract DSAuthority"
																}
															},
															"src": "1814:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 138,
															"nodeType": "Block",
															"src": "1895:74:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 130,
																				"name": "src",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 95,
																				"src": "1934:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"id": 133,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "1947:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_DSAuth_$144",
																							"typeString": "contract DSAuth"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_DSAuth_$144",
																							"typeString": "contract DSAuth"
																						}
																					],
																					"id": 132,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1939:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 131,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "1939:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1939:13:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 135,
																				"name": "sig",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 97,
																				"src": "1954:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"expression": {
																				"id": 128,
																				"name": "authority",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "1916:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_DSAuthority_$13",
																					"typeString": "contract DSAuthority"
																				}
																			},
																			"id": 129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1926:7:0",
																			"memberName": "canCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 12,
																			"src": "1916:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_bytes4_$returns$_t_bool_$",
																				"typeString": "function (address,address,bytes4) view external returns (bool)"
																			}
																		},
																		"id": 136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1916:42:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 101,
																	"id": 137,
																	"nodeType": "Return",
																	"src": "1909:49:0"
																}
															]
														},
														"id": 139,
														"nodeType": "IfStatement",
														"src": "1810:159:0",
														"trueBody": {
															"id": 127,
															"nodeType": "Block",
															"src": "1852:37:0",
															"statements": [
																{
																	"expression": {
																		"hexValue": "66616c7365",
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1873:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"functionReturnParameters": 101,
																	"id": 126,
																	"nodeType": "Return",
																	"src": "1866:12:0"
																}
															]
														}
													},
													"id": 140,
													"nodeType": "IfStatement",
													"src": "1750:219:0",
													"trueBody": {
														"id": 116,
														"nodeType": "Block",
														"src": "1768:36:0",
														"statements": [
															{
																"expression": {
																	"hexValue": "74727565",
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1789:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"functionReturnParameters": 101,
																"id": 115,
																"nodeType": "Return",
																"src": "1782:11:0"
															}
														]
													}
												},
												"id": 141,
												"nodeType": "IfStatement",
												"src": "1682:287:0",
												"trueBody": {
													"id": 110,
													"nodeType": "Block",
													"src": "1708:36:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1729:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 101,
															"id": 109,
															"nodeType": "Return",
															"src": "1722:11:0"
														}
													]
												}
											}
										]
									},
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAuthorized",
									"nameLocation": "1605:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "src",
												"nameLocation": "1626:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1618:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "1638:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1631:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 96,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1631:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1617:25:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1666:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 99,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1666:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1665:6:0"
									},
									"scope": 144,
									"src": "1596:379:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 145,
							"src": "966:1011:0",
							"usedErrors": [],
							"usedEvents": [
								17,
								21
							]
						}
					],
					"src": "677:1300:0"
				},
				"id": 0
			},
			"ds-math/math.sol": {
				"ast": {
					"absolutePath": "ds-math/math.sol",
					"exportedSymbols": {
						"DSMath": [
							448
						]
					},
					"id": 449,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 146,
							"literals": [
								"solidity",
								">",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "696:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DSMath",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "DSMath",
							"nameLocation": "731:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "804:66:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 156,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 153,
																			"src": "823:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 157,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 148,
																				"src": "827:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 158,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 150,
																				"src": "831:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "827:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "823:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 161,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "822:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 162,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "837:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "822:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "840:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															},
															"value": "ds-math-add-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "814:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "814:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "814:49:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "753:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "762:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "757:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "757:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "770:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "765:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "765:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:16:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "801:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "796:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "796:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:8:1"
									},
									"scope": 448,
									"src": "744:126:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "935:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 178,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 175,
																			"src": "954:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 179,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 170,
																				"src": "958:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 180,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 172,
																				"src": "962:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "958:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "954:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 183,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "953:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 184,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "968:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "953:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "971:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															},
															"value": "ds-math-sub-underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															}
														],
														"id": 177,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "945:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "945:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "945:50:1"
											}
										]
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "884:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "893:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "888:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "888:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "901:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "896:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "896:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:16:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "932:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "927:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "927:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "926:8:1"
									},
									"scope": 448,
									"src": "875:127:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "1067:80:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 200,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 194,
																	"src": "1085:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1090:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1085:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"id": 207,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 203,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 197,
																					"src": "1096:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 206,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 204,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 192,
																						"src": "1100:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 205,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 194,
																						"src": "1104:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1100:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1096:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 208,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1095:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 209,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 194,
																		"src": "1109:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1095:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 211,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "1114:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1095:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1085:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1117:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															},
															"value": "ds-math-mul-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															}
														],
														"id": 199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1077:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1077:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "1077:63:1"
											}
										]
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "1016:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1025:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1020:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1020:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1033:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1028:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1028:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:16:1"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1064:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "1059:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1059:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1058:8:1"
									},
									"scope": 448,
									"src": "1007:140:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "1213:38:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 227,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "1230:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 228,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "1235:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1230:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 231,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "1243:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1230:14:1",
													"trueExpression": {
														"id": 230,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "1239:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 226,
												"id": 233,
												"nodeType": "Return",
												"src": "1223:21:1"
											}
										]
									},
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "1162:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1171:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "1166:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1166:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1179:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "1174:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1174:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1165:16:1"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1210:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "1205:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 224,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1205:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:8:1"
									},
									"scope": 448,
									"src": "1153:98:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "1316:38:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 244,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1333:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 245,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "1338:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1333:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 248,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "1346:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1333:14:1",
													"trueExpression": {
														"id": 247,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "1342:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 243,
												"id": 250,
												"nodeType": "Return",
												"src": "1326:21:1"
											}
										]
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "1265:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1274:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "1269:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1269:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1282:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "1277:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1277:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1268:16:1"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1313:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "1308:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1308:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1307:8:1"
									},
									"scope": 448,
									"src": "1256:98:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "1417:38:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 261,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "1434:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 262,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "1439:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "1434:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 265,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1447:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1434:14:1",
													"trueExpression": {
														"id": 264,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "1443:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 260,
												"id": 267,
												"nodeType": "Return",
												"src": "1427:21:1"
											}
										]
									},
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "imin",
									"nameLocation": "1368:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1377:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1373:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 253,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1373:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1384:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1380:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 255,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1380:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:14:1"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1414:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1410:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 258,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1410:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1409:7:1"
									},
									"scope": 448,
									"src": "1359:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "1518:38:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 278,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "1535:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 279,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "1540:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "1535:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 282,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "1548:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1535:14:1",
													"trueExpression": {
														"id": 281,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "1544:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 277,
												"id": 284,
												"nodeType": "Return",
												"src": "1528:21:1"
											}
										]
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "imax",
									"nameLocation": "1469:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1478:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "1474:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 270,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1474:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1485:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "1481:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 272,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1481:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1473:14:1"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1515:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "1511:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 275,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1511:3:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:7:1"
									},
									"scope": 448,
									"src": "1460:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 291,
									"mutability": "constant",
									"name": "WAD",
									"nameLocation": "1576:3:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "1562:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 287,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1562:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 290,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 288,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1582:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "3138",
											"id": 289,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1588:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18_by_1",
												"typeString": "int_const 18"
											},
											"value": "18"
										},
										"src": "1582:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 296,
									"mutability": "constant",
									"name": "RAY",
									"nameLocation": "1610:3:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "1596:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 292,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1596:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										},
										"id": 295,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 293,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1616:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "3237",
											"id": 294,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1622:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_27_by_1",
												"typeString": "int_const 27"
											},
											"value": "27"
										},
										"src": "1616:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "1730:50:1",
										"statements": [
											{
												"expression": {
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 305,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "1740:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 308,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 298,
																			"src": "1752:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 309,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 300,
																			"src": "1755:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 307,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "1748:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1748:9:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 311,
																		"name": "WAD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "1759:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1765:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1759:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 306,
																"name": "add",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 168,
																"src": "1744:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1744:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 315,
															"name": "WAD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "1770:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1744:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1740:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "1740:33:1"
											}
										]
									},
									"id": 320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "wmul",
									"nameLocation": "1678:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1688:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "1683:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1683:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1696:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "1691:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1691:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:16:1"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1727:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "1722:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1722:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1721:8:1"
									},
									"scope": 448,
									"src": "1669:111:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "1884:50:1",
										"statements": [
											{
												"expression": {
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 329,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "1894:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 332,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 322,
																			"src": "1906:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 333,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 324,
																			"src": "1909:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 331,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "1902:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1902:9:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 335,
																		"name": "RAY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 296,
																		"src": "1913:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 336,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1919:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1913:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 330,
																"name": "add",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 168,
																"src": "1898:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1898:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 339,
															"name": "RAY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "1924:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1898:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1894:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "1894:33:1"
											}
										]
									},
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rmul",
									"nameLocation": "1832:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1842:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "1837:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1837:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1850:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "1845:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1845:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1836:16:1"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1881:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "1876:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1876:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1875:8:1"
									},
									"scope": 448,
									"src": "1823:111:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "2038:48:1",
										"statements": [
											{
												"expression": {
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 353,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "2048:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 356,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 346,
																			"src": "2060:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 357,
																			"name": "WAD",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 291,
																			"src": "2063:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 355,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "2056:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2056:11:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 359,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 348,
																		"src": "2069:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2073:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2069:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 354,
																"name": "add",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 168,
																"src": "2052:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2052:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 363,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "2078:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2052:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2048:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "2048:31:1"
											}
										]
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "wdiv",
									"nameLocation": "1986:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1996:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "1991:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1991:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "2004:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "1999:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1999:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1990:16:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "2035:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "2030:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2030:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:8:1"
									},
									"scope": 448,
									"src": "1977:109:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "2190:48:1",
										"statements": [
											{
												"expression": {
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 377,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "2200:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 380,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "2212:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 381,
																			"name": "RAY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 296,
																			"src": "2215:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 379,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "2208:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2208:11:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 383,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "2221:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2225:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2221:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 378,
																"name": "add",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 168,
																"src": "2204:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2204:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 387,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "2230:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2204:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2200:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "2200:31:1"
											}
										]
									},
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rdiv",
									"nameLocation": "2138:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2148:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2143:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2143:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "2156:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2151:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2151:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2142:16:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "2187:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2182:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2182:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2181:8:1"
									},
									"scope": 448,
									"src": "2129:109:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "2862:196:1",
										"statements": [
											{
												"expression": {
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 401,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "2872:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 402,
																	"name": "n",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "2876:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2880:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2876:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2885:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2876:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"id": 408,
															"name": "RAY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "2893:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "2876:20:1",
														"trueExpression": {
															"id": 407,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "2889:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2872:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "2872:24:1"
											},
											{
												"body": {
													"id": 444,
													"nodeType": "Block",
													"src": "2936:116:1",
													"statements": [
														{
															"expression": {
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 423,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "2950:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 425,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 394,
																			"src": "2959:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 426,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 394,
																			"src": "2962:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 424,
																		"name": "rmul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 344,
																		"src": "2954:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2954:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2950:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 429,
															"nodeType": "ExpressionStatement",
															"src": "2950:14:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 430,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 396,
																		"src": "2983:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2987:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2983:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2992:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2983:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 443,
															"nodeType": "IfStatement",
															"src": "2979:63:1",
															"trueBody": {
																"id": 442,
																"nodeType": "Block",
																"src": "2995:47:1",
																"statements": [
																	{
																		"expression": {
																			"id": 440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 435,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 399,
																				"src": "3013:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 437,
																						"name": "z",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 399,
																						"src": "3022:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 438,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 394,
																						"src": "3025:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 436,
																					"name": "rmul",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 344,
																					"src": "3017:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 439,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3017:10:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3013:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 441,
																		"nodeType": "ExpressionStatement",
																		"src": "3013:14:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 416,
														"name": "n",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "2920:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2925:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2920:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 445,
												"initializationExpression": {
													"expression": {
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 412,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "2912:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "/=",
														"rightHandSide": {
															"hexValue": "32",
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2917:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2912:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 415,
													"nodeType": "ExpressionStatement",
													"src": "2912:6:1"
												},
												"loopExpression": {
													"expression": {
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 419,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "2928:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "/=",
														"rightHandSide": {
															"hexValue": "32",
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2933:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2928:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 422,
													"nodeType": "ExpressionStatement",
													"src": "2928:6:1"
												},
												"nodeType": "ForStatement",
												"src": "2907:145:1"
											}
										]
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rpow",
									"nameLocation": "2810:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "2820:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "2815:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2815:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "2828:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "2823:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2823:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2814:16:1"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "2859:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "2854:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2854:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2853:8:1"
									},
									"scope": 448,
									"src": "2801:257:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 449,
							"src": "722:2338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "696:2364:1"
				},
				"id": 1
			},
			"ds-note/note.sol": {
				"ast": {
					"absolutePath": "ds-note/note.sol",
					"exportedSymbols": {
						"DSNote": [
							489
						]
					},
					"id": 490,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "709:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DSNote",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 489,
							"linearizedBaseContracts": [
								489
							],
							"name": "DSNote",
							"nameLocation": "744:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": true,
									"eventSelector": "644843f351d3fba4abcd60109eaff9f54bac8fb8ccf0bab941009c21df21cf31",
									"id": 464,
									"name": "LogNote",
									"nameLocation": "763:7:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"indexed": true,
												"mutability": "mutable",
												"name": "sig",
												"nameLocation": "798:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "780:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 451,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "780:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"indexed": true,
												"mutability": "mutable",
												"name": "guy",
												"nameLocation": "829:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "811:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"indexed": true,
												"mutability": "mutable",
												"name": "foo",
												"nameLocation": "860:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "842:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 455,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"indexed": true,
												"mutability": "mutable",
												"name": "bar",
												"nameLocation": "891:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "873:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 457,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"indexed": false,
												"mutability": "mutable",
												"name": "wad",
												"nameLocation": "922:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "904:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "904:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"indexed": false,
												"mutability": "mutable",
												"name": "fax",
												"nameLocation": "953:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "935:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "935:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "770:192:2"
									},
									"src": "757:216:2"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "993:237:2",
										"statements": [
											{
												"assignments": [
													467
												],
												"declarations": [
													{
														"constant": false,
														"id": 467,
														"mutability": "mutable",
														"name": "foo",
														"nameLocation": "1011:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 487,
														"src": "1003:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 466,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1003:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 468,
												"nodeType": "VariableDeclarationStatement",
												"src": "1003:11:2"
											},
											{
												"assignments": [
													470
												],
												"declarations": [
													{
														"constant": false,
														"id": 470,
														"mutability": "mutable",
														"name": "bar",
														"nameLocation": "1032:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 487,
														"src": "1024:11:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 469,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1024:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 471,
												"nodeType": "VariableDeclarationStatement",
												"src": "1024:11:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1055:82:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1069:22:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1089:1:2",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1076:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1076:15:2"
															},
															"variableNames": [
																{
																	"name": "foo",
																	"nodeType": "YulIdentifier",
																	"src": "1069:3:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1104:23:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1124:2:2",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1111:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1111:16:2"
															},
															"variableNames": [
																{
																	"name": "bar",
																	"nodeType": "YulIdentifier",
																	"src": "1104:3:2"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 470,
														"isOffset": false,
														"isSlot": false,
														"src": "1104:3:2",
														"valueSize": 1
													},
													{
														"declaration": 467,
														"isOffset": false,
														"isSlot": false,
														"src": "1069:3:2",
														"valueSize": 1
													}
												],
												"id": 472,
												"nodeType": "InlineAssembly",
												"src": "1046:91:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 474,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1160:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1164:3:2",
															"memberName": "sig",
															"nodeType": "MemberAccess",
															"src": "1160:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"expression": {
																"id": 476,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1169:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1173:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1169:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 478,
															"name": "foo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "1181:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 479,
															"name": "bar",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 470,
															"src": "1186:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 480,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1191:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1195:5:2",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1191:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 482,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1202:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1206:4:2",
															"memberName": "data",
															"nodeType": "MemberAccess",
															"src": "1202:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 473,
														"name": "LogNote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "1152:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes4_$_t_address_$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (bytes4,address,bytes32,bytes32,uint256,bytes memory)"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1152:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "EmitStatement",
												"src": "1147:64:2"
											},
											{
												"id": 486,
												"nodeType": "PlaceholderStatement",
												"src": "1222:1:2"
											}
										]
									},
									"id": 488,
									"name": "note",
									"nameLocation": "988:4:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "993:0:2"
									},
									"src": "979:251:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 490,
							"src": "735:497:2",
							"usedErrors": [],
							"usedEvents": [
								464
							]
						}
					],
					"src": "709:524:2"
				},
				"id": 2
			},
			"ds-thing/thing.sol": {
				"ast": {
					"absolutePath": "ds-thing/thing.sol",
					"exportedSymbols": {
						"DSAuth": [
							144
						],
						"DSAuthEvents": [
							22
						],
						"DSAuthority": [
							13
						],
						"DSMath": [
							448
						],
						"DSNote": [
							489
						],
						"DSThing": [
							519
						]
					},
					"id": 520,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 491,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "753:24:3"
						},
						{
							"absolutePath": "ds-auth/auth.sol",
							"file": "ds-auth/auth.sol",
							"id": 492,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 520,
							"sourceUnit": 145,
							"src": "779:26:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ds-note/note.sol",
							"file": "ds-note/note.sol",
							"id": 493,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 520,
							"sourceUnit": 490,
							"src": "806:26:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ds-math/math.sol",
							"file": "ds-math/math.sol",
							"id": 494,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 520,
							"sourceUnit": 449,
							"src": "833:26:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 495,
										"name": "DSAuth",
										"nameLocations": [
											"881:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 144,
										"src": "881:6:3"
									},
									"id": 496,
									"nodeType": "InheritanceSpecifier",
									"src": "881:6:3"
								},
								{
									"baseName": {
										"id": 497,
										"name": "DSNote",
										"nameLocations": [
											"889:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 489,
										"src": "889:6:3"
									},
									"id": 498,
									"nodeType": "InheritanceSpecifier",
									"src": "889:6:3"
								},
								{
									"baseName": {
										"id": 499,
										"name": "DSMath",
										"nameLocations": [
											"897:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "897:6:3"
									},
									"id": 500,
									"nodeType": "InheritanceSpecifier",
									"src": "897:6:3"
								}
							],
							"canonicalName": "DSThing",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 519,
							"linearizedBaseContracts": [
								519,
								448,
								489,
								144,
								22
							],
							"name": "DSThing",
							"nameLocation": "870:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "970:52:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 512,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 502,
																			"src": "1010:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1004:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 510,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "1004:5:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1004:8:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 509,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "994:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "994:19:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "987:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes4_$",
															"typeString": "type(bytes4)"
														},
														"typeName": {
															"id": 507,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "987:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "987:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 506,
												"id": 516,
												"nodeType": "Return",
												"src": "980:34:3"
											}
										]
									},
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "S",
									"nameLocation": "920:1:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "936:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "922:15:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 501,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "922:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "921:17:3"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "962:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 504,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "962:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:8:3"
									},
									"scope": 519,
									"src": "911:111:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 520,
							"src": "861:164:3",
							"usedErrors": [],
							"usedEvents": [
								17,
								21,
								464
							]
						}
					],
					"src": "753:273:3"
				},
				"id": 3
			},
			"ds-value/value.sol": {
				"ast": {
					"absolutePath": "ds-value/value.sol",
					"exportedSymbols": {
						"DSAuth": [
							144
						],
						"DSAuthEvents": [
							22
						],
						"DSAuthority": [
							13
						],
						"DSMath": [
							448
						],
						"DSNote": [
							489
						],
						"DSThing": [
							519
						],
						"DSValue": [
							591
						]
					},
					"id": 592,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 521,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "785:23:4"
						},
						{
							"absolutePath": "ds-thing/thing.sol",
							"file": "ds-thing/thing.sol",
							"id": 522,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 592,
							"sourceUnit": 520,
							"src": "810:28:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 523,
										"name": "DSThing",
										"nameLocations": [
											"860:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 519,
										"src": "860:7:4"
									},
									"id": 524,
									"nodeType": "InheritanceSpecifier",
									"src": "860:7:4"
								}
							],
							"canonicalName": "DSValue",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 591,
							"linearizedBaseContracts": [
								591,
								519,
								448,
								489,
								144,
								22
							],
							"name": "DSValue",
							"nameLocation": "849:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 526,
									"mutability": "mutable",
									"name": "has",
									"nameLocation": "882:3:4",
									"nodeType": "VariableDeclaration",
									"scope": 591,
									"src": "874:11:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 525,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "874:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 528,
									"mutability": "mutable",
									"name": "val",
									"nameLocation": "899:3:4",
									"nodeType": "VariableDeclaration",
									"scope": 591,
									"src": "891:11:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 527,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "891:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "960:33:4",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 535,
															"name": "val",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "978:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 536,
															"name": "has",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "982:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 537,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "977:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bool_$",
														"typeString": "tuple(bytes32,bool)"
													}
												},
												"functionReturnParameters": 534,
												"id": 538,
												"nodeType": "Return",
												"src": "970:16:4"
											}
										]
									},
									"functionSelector": "59e02dd7",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "peek",
									"nameLocation": "917:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "921:2:4"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "945:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 530,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "945:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "954:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 532,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "954:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "944:15:4"
									},
									"scope": 591,
									"src": "908:85:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "1044:200:4",
										"statements": [
											{
												"assignments": [
													546,
													548
												],
												"declarations": [
													{
														"constant": false,
														"id": 546,
														"mutability": "mutable",
														"name": "wut",
														"nameLocation": "1063:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 559,
														"src": "1055:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 545,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1055:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 548,
														"mutability": "mutable",
														"name": "haz",
														"nameLocation": "1073:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 559,
														"src": "1068:8:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 547,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1068:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 551,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 549,
														"name": "peek",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "1080:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$_t_bool_$",
															"typeString": "function () view returns (bytes32,bool)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1080:6:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bool_$",
														"typeString": "tuple(bytes32,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1054:32:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 553,
															"name": "haz",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "1134:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "445356616c75653a20696e76616c69642076616c7565",
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1139:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_71a3e0dab0bc3e15ac020c7bfa942cb48f9b705ff641c87396357a5ecf819713",
																"typeString": "literal_string \"DSValue: invalid value\""
															},
															"value": "DSValue: invalid value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_71a3e0dab0bc3e15ac020c7bfa942cb48f9b705ff641c87396357a5ecf819713",
																"typeString": "literal_string \"DSValue: invalid value\""
															}
														],
														"id": 552,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1126:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1126:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "1126:38:4"
											},
											{
												"expression": {
													"id": 557,
													"name": "wut",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 546,
													"src": "1234:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 544,
												"id": 558,
												"nodeType": "Return",
												"src": "1227:10:4"
											}
										]
									},
									"functionSelector": "57de26a4",
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "read",
									"nameLocation": "1007:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1011:2:4"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "1035:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 542,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1034:9:4"
									},
									"scope": 591,
									"src": "998:246:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "1301:46:4",
										"statements": [
											{
												"expression": {
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 569,
														"name": "val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 528,
														"src": "1311:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 570,
														"name": "wut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "1317:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1311:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 572,
												"nodeType": "ExpressionStatement",
												"src": "1311:9:4"
											},
											{
												"expression": {
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 573,
														"name": "has",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "1330:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1336:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1330:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 576,
												"nodeType": "ExpressionStatement",
												"src": "1330:10:4"
											}
										]
									},
									"functionSelector": "1504460f",
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 565,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 564,
												"name": "note",
												"nameLocations": [
													"1283:4:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "1283:4:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1283:4:4"
										},
										{
											"id": 567,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 566,
												"name": "auth",
												"nameLocations": [
													"1296:4:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 93,
												"src": "1296:4:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1296:4:4"
										}
									],
									"name": "poke",
									"nameLocation": "1258:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "wut",
												"nameLocation": "1271:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "1263:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 561,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:13:4"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1301:0:4"
									},
									"scope": 591,
									"src": "1249:98:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "1393:48:4",
										"statements": [
											{
												"expression": {
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 585,
														"name": "has",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "1423:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1429:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1423:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "1423:11:4"
											}
										]
									},
									"functionSelector": "ac4c25b2",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 581,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 580,
												"name": "note",
												"nameLocations": [
													"1375:4:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "1375:4:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1375:4:4"
										},
										{
											"id": 583,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 582,
												"name": "auth",
												"nameLocations": [
													"1388:4:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 93,
												"src": "1388:4:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1388:4:4"
										}
									],
									"name": "void",
									"nameLocation": "1361:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1365:2:4"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1393:0:4"
									},
									"scope": 591,
									"src": "1352:89:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 592,
							"src": "840:603:4",
							"usedErrors": [],
							"usedEvents": [
								17,
								21,
								464
							]
						}
					],
					"src": "785:703:4"
				},
				"id": 4
			}
		}
	}
}